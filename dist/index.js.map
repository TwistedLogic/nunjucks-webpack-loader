{"version":3,"file":"index.js","sources":["../node_modules/json5/lib/json5.js","../node_modules/loader-utils/lib/parseQuery.js","../node_modules/loader-utils/lib/getOptions.js","../node_modules/loader-utils/lib/stringifyRequest.js","../node_modules/loader-utils/lib/getRemainingRequest.js","../node_modules/loader-utils/lib/getCurrentRequest.js","../node_modules/loader-utils/lib/isUrlRequest.js","../node_modules/loader-utils/lib/urlToRequest.js","../node_modules/loader-utils/lib/parseString.js","../node_modules/big.js/big.js","../node_modules/loader-utils/lib/getHashDigest.js","../node_modules/emojis-list/index.js","../node_modules/loader-utils/lib/interpolateName.js","../node_modules/loader-utils/lib/index.js","../src/index.js"],"sourcesContent":["// json5.js\n// Modern JSON. See README.md for details.\n//\n// This file is based directly off of Douglas Crockford's json_parse.js:\n// https://github.com/douglascrockford/JSON-js/blob/master/json_parse.js\n\nvar JSON5 = (typeof exports === 'object' ? exports : {});\n\nJSON5.parse = (function () {\n    \"use strict\";\n\n// This is a function that can parse a JSON5 text, producing a JavaScript\n// data structure. It is a simple, recursive descent parser. It does not use\n// eval or regular expressions, so it can be used as a model for implementing\n// a JSON5 parser in other languages.\n\n// We are defining the function inside of another function to avoid creating\n// global variables.\n\n    var at,           // The index of the current character\n        lineNumber,   // The current line number\n        columnNumber, // The current column number\n        ch,           // The current character\n        escapee = {\n            \"'\":  \"'\",\n            '\"':  '\"',\n            '\\\\': '\\\\',\n            '/':  '/',\n            '\\n': '',       // Replace escaped newlines in strings w/ empty string\n            b:    '\\b',\n            f:    '\\f',\n            n:    '\\n',\n            r:    '\\r',\n            t:    '\\t'\n        },\n        ws = [\n            ' ',\n            '\\t',\n            '\\r',\n            '\\n',\n            '\\v',\n            '\\f',\n            '\\xA0',\n            '\\uFEFF'\n        ],\n        text,\n\n        renderChar = function (chr) {\n            return chr === '' ? 'EOF' : \"'\" + chr + \"'\";\n        },\n\n        error = function (m) {\n\n// Call error when something is wrong.\n\n            var error = new SyntaxError();\n            // beginning of message suffix to agree with that provided by Gecko - see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\n            error.message = m + \" at line \" + lineNumber + \" column \" + columnNumber + \" of the JSON5 data. Still to read: \" + JSON.stringify(text.substring(at - 1, at + 19));\n            error.at = at;\n            // These two property names have been chosen to agree with the ones in Gecko, the only popular\n            // environment which seems to supply this info on JSON.parse\n            error.lineNumber = lineNumber;\n            error.columnNumber = columnNumber;\n            throw error;\n        },\n\n        next = function (c) {\n\n// If a c parameter is provided, verify that it matches the current character.\n\n            if (c && c !== ch) {\n                error(\"Expected \" + renderChar(c) + \" instead of \" + renderChar(ch));\n            }\n\n// Get the next character. When there are no more characters,\n// return the empty string.\n\n            ch = text.charAt(at);\n            at++;\n            columnNumber++;\n            if (ch === '\\n' || ch === '\\r' && peek() !== '\\n') {\n                lineNumber++;\n                columnNumber = 0;\n            }\n            return ch;\n        },\n\n        peek = function () {\n\n// Get the next character without consuming it or\n// assigning it to the ch varaible.\n\n            return text.charAt(at);\n        },\n\n        identifier = function () {\n\n// Parse an identifier. Normally, reserved words are disallowed here, but we\n// only use this for unquoted object keys, where reserved words are allowed,\n// so we don't check for those here. References:\n// - http://es5.github.com/#x7.6\n// - https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Core_Language_Features#Variables\n// - http://docstore.mik.ua/orelly/webprog/jscript/ch02_07.htm\n// TODO Identifiers can have Unicode \"letters\" in them; add support for those.\n\n            var key = ch;\n\n            // Identifiers must start with a letter, _ or $.\n            if ((ch !== '_' && ch !== '$') &&\n                    (ch < 'a' || ch > 'z') &&\n                    (ch < 'A' || ch > 'Z')) {\n                error(\"Bad identifier as unquoted key\");\n            }\n\n            // Subsequent characters can contain digits.\n            while (next() && (\n                    ch === '_' || ch === '$' ||\n                    (ch >= 'a' && ch <= 'z') ||\n                    (ch >= 'A' && ch <= 'Z') ||\n                    (ch >= '0' && ch <= '9'))) {\n                key += ch;\n            }\n\n            return key;\n        },\n\n        number = function () {\n\n// Parse a number value.\n\n            var number,\n                sign = '',\n                string = '',\n                base = 10;\n\n            if (ch === '-' || ch === '+') {\n                sign = ch;\n                next(ch);\n            }\n\n            // support for Infinity (could tweak to allow other words):\n            if (ch === 'I') {\n                number = word();\n                if (typeof number !== 'number' || isNaN(number)) {\n                    error('Unexpected word for number');\n                }\n                return (sign === '-') ? -number : number;\n            }\n\n            // support for NaN\n            if (ch === 'N' ) {\n              number = word();\n              if (!isNaN(number)) {\n                error('expected word to be NaN');\n              }\n              // ignore sign as -NaN also is NaN\n              return number;\n            }\n\n            if (ch === '0') {\n                string += ch;\n                next();\n                if (ch === 'x' || ch === 'X') {\n                    string += ch;\n                    next();\n                    base = 16;\n                } else if (ch >= '0' && ch <= '9') {\n                    error('Octal literal');\n                }\n            }\n\n            switch (base) {\n            case 10:\n                while (ch >= '0' && ch <= '9' ) {\n                    string += ch;\n                    next();\n                }\n                if (ch === '.') {\n                    string += '.';\n                    while (next() && ch >= '0' && ch <= '9') {\n                        string += ch;\n                    }\n                }\n                if (ch === 'e' || ch === 'E') {\n                    string += ch;\n                    next();\n                    if (ch === '-' || ch === '+') {\n                        string += ch;\n                        next();\n                    }\n                    while (ch >= '0' && ch <= '9') {\n                        string += ch;\n                        next();\n                    }\n                }\n                break;\n            case 16:\n                while (ch >= '0' && ch <= '9' || ch >= 'A' && ch <= 'F' || ch >= 'a' && ch <= 'f') {\n                    string += ch;\n                    next();\n                }\n                break;\n            }\n\n            if(sign === '-') {\n                number = -string;\n            } else {\n                number = +string;\n            }\n\n            if (!isFinite(number)) {\n                error(\"Bad number\");\n            } else {\n                return number;\n            }\n        },\n\n        string = function () {\n\n// Parse a string value.\n\n            var hex,\n                i,\n                string = '',\n                delim,      // double quote or single quote\n                uffff;\n\n// When parsing for string values, we must look for ' or \" and \\ characters.\n\n            if (ch === '\"' || ch === \"'\") {\n                delim = ch;\n                while (next()) {\n                    if (ch === delim) {\n                        next();\n                        return string;\n                    } else if (ch === '\\\\') {\n                        next();\n                        if (ch === 'u') {\n                            uffff = 0;\n                            for (i = 0; i < 4; i += 1) {\n                                hex = parseInt(next(), 16);\n                                if (!isFinite(hex)) {\n                                    break;\n                                }\n                                uffff = uffff * 16 + hex;\n                            }\n                            string += String.fromCharCode(uffff);\n                        } else if (ch === '\\r') {\n                            if (peek() === '\\n') {\n                                next();\n                            }\n                        } else if (typeof escapee[ch] === 'string') {\n                            string += escapee[ch];\n                        } else {\n                            break;\n                        }\n                    } else if (ch === '\\n') {\n                        // unescaped newlines are invalid; see:\n                        // https://github.com/aseemk/json5/issues/24\n                        // TODO this feels special-cased; are there other\n                        // invalid unescaped chars?\n                        break;\n                    } else {\n                        string += ch;\n                    }\n                }\n            }\n            error(\"Bad string\");\n        },\n\n        inlineComment = function () {\n\n// Skip an inline comment, assuming this is one. The current character should\n// be the second / character in the // pair that begins this inline comment.\n// To finish the inline comment, we look for a newline or the end of the text.\n\n            if (ch !== '/') {\n                error(\"Not an inline comment\");\n            }\n\n            do {\n                next();\n                if (ch === '\\n' || ch === '\\r') {\n                    next();\n                    return;\n                }\n            } while (ch);\n        },\n\n        blockComment = function () {\n\n// Skip a block comment, assuming this is one. The current character should be\n// the * character in the /* pair that begins this block comment.\n// To finish the block comment, we look for an ending */ pair of characters,\n// but we also watch for the end of text before the comment is terminated.\n\n            if (ch !== '*') {\n                error(\"Not a block comment\");\n            }\n\n            do {\n                next();\n                while (ch === '*') {\n                    next('*');\n                    if (ch === '/') {\n                        next('/');\n                        return;\n                    }\n                }\n            } while (ch);\n\n            error(\"Unterminated block comment\");\n        },\n\n        comment = function () {\n\n// Skip a comment, whether inline or block-level, assuming this is one.\n// Comments always begin with a / character.\n\n            if (ch !== '/') {\n                error(\"Not a comment\");\n            }\n\n            next('/');\n\n            if (ch === '/') {\n                inlineComment();\n            } else if (ch === '*') {\n                blockComment();\n            } else {\n                error(\"Unrecognized comment\");\n            }\n        },\n\n        white = function () {\n\n// Skip whitespace and comments.\n// Note that we're detecting comments by only a single / character.\n// This works since regular expressions are not valid JSON(5), but this will\n// break if there are other valid values that begin with a / character!\n\n            while (ch) {\n                if (ch === '/') {\n                    comment();\n                } else if (ws.indexOf(ch) >= 0) {\n                    next();\n                } else {\n                    return;\n                }\n            }\n        },\n\n        word = function () {\n\n// true, false, or null.\n\n            switch (ch) {\n            case 't':\n                next('t');\n                next('r');\n                next('u');\n                next('e');\n                return true;\n            case 'f':\n                next('f');\n                next('a');\n                next('l');\n                next('s');\n                next('e');\n                return false;\n            case 'n':\n                next('n');\n                next('u');\n                next('l');\n                next('l');\n                return null;\n            case 'I':\n                next('I');\n                next('n');\n                next('f');\n                next('i');\n                next('n');\n                next('i');\n                next('t');\n                next('y');\n                return Infinity;\n            case 'N':\n              next( 'N' );\n              next( 'a' );\n              next( 'N' );\n              return NaN;\n            }\n            error(\"Unexpected \" + renderChar(ch));\n        },\n\n        value,  // Place holder for the value function.\n\n        array = function () {\n\n// Parse an array value.\n\n            var array = [];\n\n            if (ch === '[') {\n                next('[');\n                white();\n                while (ch) {\n                    if (ch === ']') {\n                        next(']');\n                        return array;   // Potentially empty array\n                    }\n                    // ES5 allows omitting elements in arrays, e.g. [,] and\n                    // [,null]. We don't allow this in JSON5.\n                    if (ch === ',') {\n                        error(\"Missing array element\");\n                    } else {\n                        array.push(value());\n                    }\n                    white();\n                    // If there's no comma after this value, this needs to\n                    // be the end of the array.\n                    if (ch !== ',') {\n                        next(']');\n                        return array;\n                    }\n                    next(',');\n                    white();\n                }\n            }\n            error(\"Bad array\");\n        },\n\n        object = function () {\n\n// Parse an object value.\n\n            var key,\n                object = {};\n\n            if (ch === '{') {\n                next('{');\n                white();\n                while (ch) {\n                    if (ch === '}') {\n                        next('}');\n                        return object;   // Potentially empty object\n                    }\n\n                    // Keys can be unquoted. If they are, they need to be\n                    // valid JS identifiers.\n                    if (ch === '\"' || ch === \"'\") {\n                        key = string();\n                    } else {\n                        key = identifier();\n                    }\n\n                    white();\n                    next(':');\n                    object[key] = value();\n                    white();\n                    // If there's no comma after this pair, this needs to be\n                    // the end of the object.\n                    if (ch !== ',') {\n                        next('}');\n                        return object;\n                    }\n                    next(',');\n                    white();\n                }\n            }\n            error(\"Bad object\");\n        };\n\n    value = function () {\n\n// Parse a JSON value. It could be an object, an array, a string, a number,\n// or a word.\n\n        white();\n        switch (ch) {\n        case '{':\n            return object();\n        case '[':\n            return array();\n        case '\"':\n        case \"'\":\n            return string();\n        case '-':\n        case '+':\n        case '.':\n            return number();\n        default:\n            return ch >= '0' && ch <= '9' ? number() : word();\n        }\n    };\n\n// Return the json_parse function. It will have access to all of the above\n// functions and variables.\n\n    return function (source, reviver) {\n        var result;\n\n        text = String(source);\n        at = 0;\n        lineNumber = 1;\n        columnNumber = 1;\n        ch = ' ';\n        result = value();\n        white();\n        if (ch) {\n            error(\"Syntax error\");\n        }\n\n// If there is a reviver function, we recursively walk the new structure,\n// passing each name/value pair to the reviver function for possible\n// transformation, starting with a temporary root object that holds the result\n// in an empty key. If there is not a reviver function, we simply return the\n// result.\n\n        return typeof reviver === 'function' ? (function walk(holder, key) {\n            var k, v, value = holder[key];\n            if (value && typeof value === 'object') {\n                for (k in value) {\n                    if (Object.prototype.hasOwnProperty.call(value, k)) {\n                        v = walk(value, k);\n                        if (v !== undefined) {\n                            value[k] = v;\n                        } else {\n                            delete value[k];\n                        }\n                    }\n                }\n            }\n            return reviver.call(holder, key, value);\n        }({'': result}, '')) : result;\n    };\n}());\n\n// JSON5 stringify will not quote keys where appropriate\nJSON5.stringify = function (obj, replacer, space) {\n    if (replacer && (typeof(replacer) !== \"function\" && !isArray(replacer))) {\n        throw new Error('Replacer must be a function or an array');\n    }\n    var getReplacedValueOrUndefined = function(holder, key, isTopLevel) {\n        var value = holder[key];\n\n        // Replace the value with its toJSON value first, if possible\n        if (value && value.toJSON && typeof value.toJSON === \"function\") {\n            value = value.toJSON();\n        }\n\n        // If the user-supplied replacer if a function, call it. If it's an array, check objects' string keys for\n        // presence in the array (removing the key/value pair from the resulting JSON if the key is missing).\n        if (typeof(replacer) === \"function\") {\n            return replacer.call(holder, key, value);\n        } else if(replacer) {\n            if (isTopLevel || isArray(holder) || replacer.indexOf(key) >= 0) {\n                return value;\n            } else {\n                return undefined;\n            }\n        } else {\n            return value;\n        }\n    };\n\n    function isWordChar(c) {\n        return (c >= 'a' && c <= 'z') ||\n            (c >= 'A' && c <= 'Z') ||\n            (c >= '0' && c <= '9') ||\n            c === '_' || c === '$';\n    }\n\n    function isWordStart(c) {\n        return (c >= 'a' && c <= 'z') ||\n            (c >= 'A' && c <= 'Z') ||\n            c === '_' || c === '$';\n    }\n\n    function isWord(key) {\n        if (typeof key !== 'string') {\n            return false;\n        }\n        if (!isWordStart(key[0])) {\n            return false;\n        }\n        var i = 1, length = key.length;\n        while (i < length) {\n            if (!isWordChar(key[i])) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    }\n\n    // export for use in tests\n    JSON5.isWord = isWord;\n\n    // polyfills\n    function isArray(obj) {\n        if (Array.isArray) {\n            return Array.isArray(obj);\n        } else {\n            return Object.prototype.toString.call(obj) === '[object Array]';\n        }\n    }\n\n    function isDate(obj) {\n        return Object.prototype.toString.call(obj) === '[object Date]';\n    }\n\n    var objStack = [];\n    function checkForCircular(obj) {\n        for (var i = 0; i < objStack.length; i++) {\n            if (objStack[i] === obj) {\n                throw new TypeError(\"Converting circular structure to JSON\");\n            }\n        }\n    }\n\n    function makeIndent(str, num, noNewLine) {\n        if (!str) {\n            return \"\";\n        }\n        // indentation no more than 10 chars\n        if (str.length > 10) {\n            str = str.substring(0, 10);\n        }\n\n        var indent = noNewLine ? \"\" : \"\\n\";\n        for (var i = 0; i < num; i++) {\n            indent += str;\n        }\n\n        return indent;\n    }\n\n    var indentStr;\n    if (space) {\n        if (typeof space === \"string\") {\n            indentStr = space;\n        } else if (typeof space === \"number\" && space >= 0) {\n            indentStr = makeIndent(\" \", space, true);\n        } else {\n            // ignore space parameter\n        }\n    }\n\n    // Copied from Crokford's implementation of JSON\n    // See https://github.com/douglascrockford/JSON-js/blob/e39db4b7e6249f04a195e7dd0840e610cc9e941e/json2.js#L195\n    // Begin\n    var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        meta = { // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"' : '\\\\\"',\n        '\\\\': '\\\\\\\\'\n    };\n    function escapeString(string) {\n\n// If the string contains no control characters, no quote characters, and no\n// backslash characters, then we can safely slap some quotes around it.\n// Otherwise we must also replace the offending characters with safe escape\n// sequences.\n        escapable.lastIndex = 0;\n        return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n            var c = meta[a];\n            return typeof c === 'string' ?\n                c :\n                '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n        }) + '\"' : '\"' + string + '\"';\n    }\n    // End\n\n    function internalStringify(holder, key, isTopLevel) {\n        var buffer, res;\n\n        // Replace the value, if necessary\n        var obj_part = getReplacedValueOrUndefined(holder, key, isTopLevel);\n\n        if (obj_part && !isDate(obj_part)) {\n            // unbox objects\n            // don't unbox dates, since will turn it into number\n            obj_part = obj_part.valueOf();\n        }\n        switch(typeof obj_part) {\n            case \"boolean\":\n                return obj_part.toString();\n\n            case \"number\":\n                if (isNaN(obj_part) || !isFinite(obj_part)) {\n                    return \"null\";\n                }\n                return obj_part.toString();\n\n            case \"string\":\n                return escapeString(obj_part.toString());\n\n            case \"object\":\n                if (obj_part === null) {\n                    return \"null\";\n                } else if (isArray(obj_part)) {\n                    checkForCircular(obj_part);\n                    buffer = \"[\";\n                    objStack.push(obj_part);\n\n                    for (var i = 0; i < obj_part.length; i++) {\n                        res = internalStringify(obj_part, i, false);\n                        buffer += makeIndent(indentStr, objStack.length);\n                        if (res === null || typeof res === \"undefined\") {\n                            buffer += \"null\";\n                        } else {\n                            buffer += res;\n                        }\n                        if (i < obj_part.length-1) {\n                            buffer += \",\";\n                        } else if (indentStr) {\n                            buffer += \"\\n\";\n                        }\n                    }\n                    objStack.pop();\n                    if (obj_part.length) {\n                        buffer += makeIndent(indentStr, objStack.length, true)\n                    }\n                    buffer += \"]\";\n                } else {\n                    checkForCircular(obj_part);\n                    buffer = \"{\";\n                    var nonEmpty = false;\n                    objStack.push(obj_part);\n                    for (var prop in obj_part) {\n                        if (obj_part.hasOwnProperty(prop)) {\n                            var value = internalStringify(obj_part, prop, false);\n                            isTopLevel = false;\n                            if (typeof value !== \"undefined\" && value !== null) {\n                                buffer += makeIndent(indentStr, objStack.length);\n                                nonEmpty = true;\n                                key = isWord(prop) ? prop : escapeString(prop);\n                                buffer += key + \":\" + (indentStr ? ' ' : '') + value + \",\";\n                            }\n                        }\n                    }\n                    objStack.pop();\n                    if (nonEmpty) {\n                        buffer = buffer.substring(0, buffer.length-1) + makeIndent(indentStr, objStack.length) + \"}\";\n                    } else {\n                        buffer = '{}';\n                    }\n                }\n                return buffer;\n            default:\n                // functions and undefined should be ignored\n                return undefined;\n        }\n    }\n\n    // special case...when undefined is used inside of\n    // a compound object/array, return null.\n    // but when top-level, return undefined\n    var topLevelHolder = {\"\":obj};\n    if (obj === undefined) {\n        return getReplacedValueOrUndefined(topLevelHolder, '', true);\n    }\n    return internalStringify(topLevelHolder, '', true);\n};\n","\"use strict\";\n\nconst JSON5 = require(\"json5\");\n\nconst specialValues = {\n\t\"null\": null,\n\t\"true\": true,\n\t\"false\": false\n};\n\nfunction parseQuery(query) {\n\tif(query.substr(0, 1) !== \"?\") {\n\t\tthrow new Error(\"A valid query string passed to parseQuery should begin with '?'\");\n\t}\n\tquery = query.substr(1);\n\tif(!query) {\n\t\treturn {};\n\t}\n\tif(query.substr(0, 1) === \"{\" && query.substr(-1) === \"}\") {\n\t\treturn JSON5.parse(query);\n\t}\n\tconst queryArgs = query.split(/[,&]/g);\n\tconst result = {};\n\tqueryArgs.forEach(arg => {\n\t\tconst idx = arg.indexOf(\"=\");\n\t\tif(idx >= 0) {\n\t\t\tlet name = arg.substr(0, idx);\n\t\t\tlet value = decodeURIComponent(arg.substr(idx + 1));\n\t\t\tif(specialValues.hasOwnProperty(value)) {\n\t\t\t\tvalue = specialValues[value];\n\t\t\t}\n\t\t\tif(name.substr(-2) === \"[]\") {\n\t\t\t\tname = decodeURIComponent(name.substr(0, name.length - 2));\n\t\t\t\tif(!Array.isArray(result[name]))\n\t\t\t\t\tresult[name] = [];\n\t\t\t\tresult[name].push(value);\n\t\t\t} else {\n\t\t\t\tname = decodeURIComponent(name);\n\t\t\t\tresult[name] = value;\n\t\t\t}\n\t\t} else {\n\t\t\tif(arg.substr(0, 1) === \"-\") {\n\t\t\t\tresult[decodeURIComponent(arg.substr(1))] = false;\n\t\t\t} else if(arg.substr(0, 1) === \"+\") {\n\t\t\t\tresult[decodeURIComponent(arg.substr(1))] = true;\n\t\t\t} else {\n\t\t\t\tresult[decodeURIComponent(arg)] = true;\n\t\t\t}\n\t\t}\n\t});\n\treturn result;\n}\n\nmodule.exports = parseQuery;\n","\"use strict\";\n\nconst parseQuery = require(\"./parseQuery\");\n\nfunction getOptions(loaderContext) {\n\tconst query = loaderContext.query;\n\tif(typeof query === \"string\" && query !== \"\") {\n\t\treturn parseQuery(loaderContext.query);\n\t}\n\tif(!query || typeof query !== \"object\") {\n\t\t// Not object-like queries are not supported.\n\t\treturn null;\n\t}\n\treturn query;\n}\n\nmodule.exports = getOptions;\n","\"use strict\";\n\nconst path = require(\"path\");\n\nconst matchRelativePath = /^\\.\\.?[/\\\\]/;\n\nfunction isAbsolutePath(str) {\n\treturn path.posix.isAbsolute(str) || path.win32.isAbsolute(str);\n}\n\nfunction isRelativePath(str) {\n\treturn matchRelativePath.test(str);\n}\n\nfunction stringifyRequest(loaderContext, request) {\n\tconst splitted = request.split(\"!\");\n\tconst context = loaderContext.context || (loaderContext.options && loaderContext.options.context);\n\treturn JSON.stringify(splitted.map(part => {\n\t\t// First, separate singlePath from query, because the query might contain paths again\n\t\tconst splittedPart = part.match(/^(.*?)(\\?.*)/);\n\t\tlet singlePath = splittedPart ? splittedPart[1] : part;\n\t\tconst query = splittedPart ? splittedPart[2] : \"\";\n\t\tif(isAbsolutePath(singlePath) && context) {\n\t\t\tsinglePath = path.relative(context, singlePath);\n\t\t\tif(isAbsolutePath(singlePath)) {\n\t\t\t\t// If singlePath still matches an absolute path, singlePath was on a different drive than context.\n\t\t\t\t// In this case, we leave the path platform-specific without replacing any separators.\n\t\t\t\t// @see https://github.com/webpack/loader-utils/pull/14\n\t\t\t\treturn singlePath + query;\n\t\t\t}\n\t\t\tif(isRelativePath(singlePath) === false) {\n\t\t\t\t// Ensure that the relative path starts at least with ./ otherwise it would be a request into the modules directory (like node_modules).\n\t\t\t\tsinglePath = \"./\" + singlePath;\n\t\t\t}\n\t\t}\n\t\treturn singlePath.replace(/\\\\/g, \"/\") + query;\n\t}).join(\"!\"));\n}\n\nmodule.exports = stringifyRequest;\n","\"use strict\";\n\nfunction getRemainingRequest(loaderContext) {\n\tif(loaderContext.remainingRequest)\n\t\treturn loaderContext.remainingRequest;\n\tconst request = loaderContext.loaders\n\t\t.slice(loaderContext.loaderIndex + 1)\n\t\t.map(obj => obj.request)\n\t\t.concat([loaderContext.resource]);\n\treturn request.join(\"!\");\n}\n\nmodule.exports = getRemainingRequest;\n","\"use strict\";\n\nfunction getCurrentRequest(loaderContext) {\n\tif(loaderContext.currentRequest)\n\t\treturn loaderContext.currentRequest;\n\tconst request = loaderContext.loaders\n\t\t.slice(loaderContext.loaderIndex)\n\t\t.map(obj => obj.request)\n\t\t.concat([loaderContext.resource]);\n\treturn request.join(\"!\");\n}\n\nmodule.exports = getCurrentRequest;\n","\"use strict\";\n\nfunction isUrlRequest(url, root) {\n\t// An URL is not an request if\n\t// 1. it's a Data Url\n\t// 2. it's an absolute url or and protocol-relative\n\t// 3. it's some kind of url for a template\n\tif(/^data:|^chrome-extension:|^(https?:)?\\/\\/|^[\\{\\}\\[\\]#*;,'§\\$%&\\(=?`´\\^°<>]/.test(url)) return false;\n\t// 4. It's also not an request if root isn't set and it's a root-relative url\n\tif((root === undefined || root === false) && /^\\//.test(url)) return false;\n\treturn true;\n}\n\nmodule.exports = isUrlRequest;\n","\"use strict\";\n\n// we can't use path.win32.isAbsolute because it also matches paths starting with a forward slash\nconst matchNativeWin32Path = /^[A-Z]:[/\\\\]|^\\\\\\\\/i;\n\nfunction urlToRequest(url, root) {\n\tconst moduleRequestRegex = /^[^?]*~/;\n\tlet request;\n\n\tif(matchNativeWin32Path.test(url)) {\n\t\t// absolute windows path, keep it\n\t\trequest = url;\n\t} else if(root !== undefined && root !== false && /^\\//.test(url)) {\n\t\t// if root is set and the url is root-relative\n\t\tswitch(typeof root) {\n\t\t\t// 1. root is a string: root is prefixed to the url\n\t\t\tcase \"string\":\n\t\t\t\t// special case: `~` roots convert to module request\n\t\t\t\tif(moduleRequestRegex.test(root)) {\n\t\t\t\t\trequest = root.replace(/([^~\\/])$/, \"$1/\") + url.slice(1);\n\t\t\t\t} else {\n\t\t\t\t\trequest = root + url;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t// 2. root is `true`: absolute paths are allowed\n\t\t\t//    *nix only, windows-style absolute paths are always allowed as they doesn't start with a `/`\n\t\t\tcase \"boolean\":\n\t\t\t\trequest = url;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"Unexpected parameters to loader-utils 'urlToRequest': url = \" + url + \", root = \" + root + \".\");\n\t\t}\n\t} else if(/^\\.\\.?\\//.test(url)) {\n\t\t// A relative url stays\n\t\trequest = url;\n\t} else {\n\t\t// every other url is threaded like a relative url\n\t\trequest = \"./\" + url;\n\t}\n\n\t// A `~` makes the url an module\n\tif(moduleRequestRegex.test(request)) {\n\t\trequest = request.replace(moduleRequestRegex, \"\");\n\t}\n\n\treturn request;\n}\n\nmodule.exports = urlToRequest;\n","\"use strict\";\n\nfunction parseString(str) {\n\ttry {\n\t\tif(str[0] === \"\\\"\") return JSON.parse(str);\n\t\tif(str[0] === \"'\" && str.substr(str.length - 1) === \"'\") {\n\t\t\treturn parseString(\n\t\t\t\tstr\n\t\t\t\t\t.replace(/\\\\.|\"/g, x => x === \"\\\"\" ? \"\\\\\\\"\" : x)\n\t\t\t\t\t.replace(/^'|'$/g, \"\\\"\")\n\t\t\t);\n\t\t}\n\t\treturn JSON.parse(\"\\\"\" + str + \"\\\"\");\n\t} catch(e) {\n\t\treturn str;\n\t}\n}\n\nmodule.exports = parseString;\n","/* big.js v3.1.3 https://github.com/MikeMcl/big.js/LICENCE */\r\n;(function (global) {\r\n    'use strict';\r\n\r\n/*\r\n  big.js v3.1.3\r\n  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\r\n  https://github.com/MikeMcl/big.js/\r\n  Copyright (c) 2014 Michael Mclaughlin <M8ch88l@gmail.com>\r\n  MIT Expat Licence\r\n*/\r\n\r\n/***************************** EDITABLE DEFAULTS ******************************/\r\n\r\n    // The default values below must be integers within the stated ranges.\r\n\r\n    /*\r\n     * The maximum number of decimal places of the results of operations\r\n     * involving division: div and sqrt, and pow with negative exponents.\r\n     */\r\n    var DP = 20,                           // 0 to MAX_DP\r\n\r\n        /*\r\n         * The rounding mode used when rounding to the above decimal places.\r\n         *\r\n         * 0 Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\r\n         * 1 To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\r\n         * 2 To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\r\n         * 3 Away from zero.                                  (ROUND_UP)\r\n         */\r\n        RM = 1,                            // 0, 1, 2 or 3\r\n\r\n        // The maximum value of DP and Big.DP.\r\n        MAX_DP = 1E6,                      // 0 to 1000000\r\n\r\n        // The maximum magnitude of the exponent argument to the pow method.\r\n        MAX_POWER = 1E6,                   // 1 to 1000000\r\n\r\n        /*\r\n         * The exponent value at and beneath which toString returns exponential\r\n         * notation.\r\n         * JavaScript's Number type: -7\r\n         * -1000000 is the minimum recommended exponent value of a Big.\r\n         */\r\n        E_NEG = -7,                   // 0 to -1000000\r\n\r\n        /*\r\n         * The exponent value at and above which toString returns exponential\r\n         * notation.\r\n         * JavaScript's Number type: 21\r\n         * 1000000 is the maximum recommended exponent value of a Big.\r\n         * (This limit is not enforced or checked.)\r\n         */\r\n        E_POS = 21,                   // 0 to 1000000\r\n\r\n/******************************************************************************/\r\n\r\n        // The shared prototype object.\r\n        P = {},\r\n        isValid = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n        Big;\r\n\r\n\r\n    /*\r\n     * Create and return a Big constructor.\r\n     *\r\n     */\r\n    function bigFactory() {\r\n\r\n        /*\r\n         * The Big constructor and exported function.\r\n         * Create and return a new instance of a Big number object.\r\n         *\r\n         * n {number|string|Big} A numeric value.\r\n         */\r\n        function Big(n) {\r\n            var x = this;\r\n\r\n            // Enable constructor usage without new.\r\n            if (!(x instanceof Big)) {\r\n                return n === void 0 ? bigFactory() : new Big(n);\r\n            }\r\n\r\n            // Duplicate.\r\n            if (n instanceof Big) {\r\n                x.s = n.s;\r\n                x.e = n.e;\r\n                x.c = n.c.slice();\r\n            } else {\r\n                parse(x, n);\r\n            }\r\n\r\n            /*\r\n             * Retain a reference to this Big constructor, and shadow\r\n             * Big.prototype.constructor which points to Object.\r\n             */\r\n            x.constructor = Big;\r\n        }\r\n\r\n        Big.prototype = P;\r\n        Big.DP = DP;\r\n        Big.RM = RM;\r\n        Big.E_NEG = E_NEG;\r\n        Big.E_POS = E_POS;\r\n\r\n        return Big;\r\n    }\r\n\r\n\r\n    // Private functions\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of Big x in normal or exponential\r\n     * notation to dp fixed decimal places or significant digits.\r\n     *\r\n     * x {Big} The Big to format.\r\n     * dp {number} Integer, 0 to MAX_DP inclusive.\r\n     * toE {number} 1 (toExponential), 2 (toPrecision) or undefined (toFixed).\r\n     */\r\n    function format(x, dp, toE) {\r\n        var Big = x.constructor,\r\n\r\n            // The index (normal notation) of the digit that may be rounded up.\r\n            i = dp - (x = new Big(x)).e,\r\n            c = x.c;\r\n\r\n        // Round?\r\n        if (c.length > ++dp) {\r\n            rnd(x, i, Big.RM);\r\n        }\r\n\r\n        if (!c[0]) {\r\n            ++i;\r\n        } else if (toE) {\r\n            i = dp;\r\n\r\n        // toFixed\r\n        } else {\r\n            c = x.c;\r\n\r\n            // Recalculate i as x.e may have changed if value rounded up.\r\n            i = x.e + i + 1;\r\n        }\r\n\r\n        // Append zeros?\r\n        for (; c.length < i; c.push(0)) {\r\n        }\r\n        i = x.e;\r\n\r\n        /*\r\n         * toPrecision returns exponential notation if the number of\r\n         * significant digits specified is less than the number of digits\r\n         * necessary to represent the integer part of the value in normal\r\n         * notation.\r\n         */\r\n        return toE === 1 || toE && (dp <= i || i <= Big.E_NEG) ?\r\n\r\n          // Exponential notation.\r\n          (x.s < 0 && c[0] ? '-' : '') +\r\n            (c.length > 1 ? c[0] + '.' + c.join('').slice(1) : c[0]) +\r\n              (i < 0 ? 'e' : 'e+') + i\r\n\r\n          // Normal notation.\r\n          : x.toString();\r\n    }\r\n\r\n\r\n    /*\r\n     * Parse the number or string value passed to a Big constructor.\r\n     *\r\n     * x {Big} A Big number instance.\r\n     * n {number|string} A numeric value.\r\n     */\r\n    function parse(x, n) {\r\n        var e, i, nL;\r\n\r\n        // Minus zero?\r\n        if (n === 0 && 1 / n < 0) {\r\n            n = '-0';\r\n\r\n        // Ensure n is string and check validity.\r\n        } else if (!isValid.test(n += '')) {\r\n            throwErr(NaN);\r\n        }\r\n\r\n        // Determine sign.\r\n        x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\r\n\r\n        // Decimal point?\r\n        if ((e = n.indexOf('.')) > -1) {\r\n            n = n.replace('.', '');\r\n        }\r\n\r\n        // Exponential form?\r\n        if ((i = n.search(/e/i)) > 0) {\r\n\r\n            // Determine exponent.\r\n            if (e < 0) {\r\n                e = i;\r\n            }\r\n            e += +n.slice(i + 1);\r\n            n = n.substring(0, i);\r\n\r\n        } else if (e < 0) {\r\n\r\n            // Integer.\r\n            e = n.length;\r\n        }\r\n\r\n        nL = n.length;\r\n\r\n        // Determine leading zeros.\r\n        for (i = 0; i < nL && n.charAt(i) == '0'; i++) {\r\n        }\r\n\r\n        if (i == nL) {\r\n\r\n            // Zero.\r\n            x.c = [ x.e = 0 ];\r\n        } else {\r\n\r\n            // Determine trailing zeros.\r\n            for (; nL > 0 && n.charAt(--nL) == '0';) {\r\n            }\r\n\r\n            x.e = e - i - 1;\r\n            x.c = [];\r\n\r\n            // Convert string to array of digits without leading/trailing zeros.\r\n            //for (e = 0; i <= nL; x.c[e++] = +n.charAt(i++)) {\r\n            for (; i <= nL; x.c.push(+n.charAt(i++))) {\r\n            }\r\n        }\r\n\r\n        return x;\r\n    }\r\n\r\n\r\n    /*\r\n     * Round Big x to a maximum of dp decimal places using rounding mode rm.\r\n     * Called by div, sqrt and round.\r\n     *\r\n     * x {Big} The Big to round.\r\n     * dp {number} Integer, 0 to MAX_DP inclusive.\r\n     * rm {number} 0, 1, 2 or 3 (DOWN, HALF_UP, HALF_EVEN, UP)\r\n     * [more] {boolean} Whether the result of division was truncated.\r\n     */\r\n    function rnd(x, dp, rm, more) {\r\n        var u,\r\n            xc = x.c,\r\n            i = x.e + dp + 1;\r\n\r\n        if (rm === 1) {\r\n\r\n            // xc[i] is the digit after the digit that may be rounded up.\r\n            more = xc[i] >= 5;\r\n        } else if (rm === 2) {\r\n            more = xc[i] > 5 || xc[i] == 5 &&\r\n              (more || i < 0 || xc[i + 1] !== u || xc[i - 1] & 1);\r\n        } else if (rm === 3) {\r\n            more = more || xc[i] !== u || i < 0;\r\n        } else {\r\n            more = false;\r\n\r\n            if (rm !== 0) {\r\n                throwErr('!Big.RM!');\r\n            }\r\n        }\r\n\r\n        if (i < 1 || !xc[0]) {\r\n\r\n            if (more) {\r\n\r\n                // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n                x.e = -dp;\r\n                x.c = [1];\r\n            } else {\r\n\r\n                // Zero.\r\n                x.c = [x.e = 0];\r\n            }\r\n        } else {\r\n\r\n            // Remove any digits after the required decimal places.\r\n            xc.length = i--;\r\n\r\n            // Round up?\r\n            if (more) {\r\n\r\n                // Rounding up may mean the previous digit has to be rounded up.\r\n                for (; ++xc[i] > 9;) {\r\n                    xc[i] = 0;\r\n\r\n                    if (!i--) {\r\n                        ++x.e;\r\n                        xc.unshift(1);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Remove trailing zeros.\r\n            for (i = xc.length; !xc[--i]; xc.pop()) {\r\n            }\r\n        }\r\n\r\n        return x;\r\n    }\r\n\r\n\r\n    /*\r\n     * Throw a BigError.\r\n     *\r\n     * message {string} The error message.\r\n     */\r\n    function throwErr(message) {\r\n        var err = new Error(message);\r\n        err.name = 'BigError';\r\n\r\n        throw err;\r\n    }\r\n\r\n\r\n    // Prototype/instance methods\r\n\r\n\r\n    /*\r\n     * Return a new Big whose value is the absolute value of this Big.\r\n     */\r\n    P.abs = function () {\r\n        var x = new this.constructor(this);\r\n        x.s = 1;\r\n\r\n        return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     * 1 if the value of this Big is greater than the value of Big y,\r\n     * -1 if the value of this Big is less than the value of Big y, or\r\n     * 0 if they have the same value.\r\n    */\r\n    P.cmp = function (y) {\r\n        var xNeg,\r\n            x = this,\r\n            xc = x.c,\r\n            yc = (y = new x.constructor(y)).c,\r\n            i = x.s,\r\n            j = y.s,\r\n            k = x.e,\r\n            l = y.e;\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n            return !xc[0] ? !yc[0] ? 0 : -j : i;\r\n        }\r\n\r\n        // Signs differ?\r\n        if (i != j) {\r\n            return i;\r\n        }\r\n        xNeg = i < 0;\r\n\r\n        // Compare exponents.\r\n        if (k != l) {\r\n            return k > l ^ xNeg ? 1 : -1;\r\n        }\r\n\r\n        i = -1;\r\n        j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n        // Compare digit by digit.\r\n        for (; ++i < j;) {\r\n\r\n            if (xc[i] != yc[i]) {\r\n                return xc[i] > yc[i] ^ xNeg ? 1 : -1;\r\n            }\r\n        }\r\n\r\n        // Compare lengths.\r\n        return k == l ? 0 : k > l ^ xNeg ? 1 : -1;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Big whose value is the value of this Big divided by the\r\n     * value of Big y, rounded, if necessary, to a maximum of Big.DP decimal\r\n     * places using rounding mode Big.RM.\r\n     */\r\n    P.div = function (y) {\r\n        var x = this,\r\n            Big = x.constructor,\r\n            // dividend\r\n            dvd = x.c,\r\n            //divisor\r\n            dvs = (y = new Big(y)).c,\r\n            s = x.s == y.s ? 1 : -1,\r\n            dp = Big.DP;\r\n\r\n        if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n            throwErr('!Big.DP!');\r\n        }\r\n\r\n        // Either 0?\r\n        if (!dvd[0] || !dvs[0]) {\r\n\r\n            // If both are 0, throw NaN\r\n            if (dvd[0] == dvs[0]) {\r\n                throwErr(NaN);\r\n            }\r\n\r\n            // If dvs is 0, throw +-Infinity.\r\n            if (!dvs[0]) {\r\n                throwErr(s / 0);\r\n            }\r\n\r\n            // dvd is 0, return +-0.\r\n            return new Big(s * 0);\r\n        }\r\n\r\n        var dvsL, dvsT, next, cmp, remI, u,\r\n            dvsZ = dvs.slice(),\r\n            dvdI = dvsL = dvs.length,\r\n            dvdL = dvd.length,\r\n            // remainder\r\n            rem = dvd.slice(0, dvsL),\r\n            remL = rem.length,\r\n            // quotient\r\n            q = y,\r\n            qc = q.c = [],\r\n            qi = 0,\r\n            digits = dp + (q.e = x.e - y.e) + 1;\r\n\r\n        q.s = s;\r\n        s = digits < 0 ? 0 : digits;\r\n\r\n        // Create version of divisor with leading zero.\r\n        dvsZ.unshift(0);\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL++ < dvsL; rem.push(0)) {\r\n        }\r\n\r\n        do {\r\n\r\n            // 'next' is how many times the divisor goes into current remainder.\r\n            for (next = 0; next < 10; next++) {\r\n\r\n                // Compare divisor and remainder.\r\n                if (dvsL != (remL = rem.length)) {\r\n                    cmp = dvsL > remL ? 1 : -1;\r\n                } else {\r\n\r\n                    for (remI = -1, cmp = 0; ++remI < dvsL;) {\r\n\r\n                        if (dvs[remI] != rem[remI]) {\r\n                            cmp = dvs[remI] > rem[remI] ? 1 : -1;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // If divisor < remainder, subtract divisor from remainder.\r\n                if (cmp < 0) {\r\n\r\n                    // Remainder can't be more than 1 digit longer than divisor.\r\n                    // Equalise lengths using divisor with extra leading zero?\r\n                    for (dvsT = remL == dvsL ? dvs : dvsZ; remL;) {\r\n\r\n                        if (rem[--remL] < dvsT[remL]) {\r\n                            remI = remL;\r\n\r\n                            for (; remI && !rem[--remI]; rem[remI] = 9) {\r\n                            }\r\n                            --rem[remI];\r\n                            rem[remL] += 10;\r\n                        }\r\n                        rem[remL] -= dvsT[remL];\r\n                    }\r\n                    for (; !rem[0]; rem.shift()) {\r\n                    }\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Add the 'next' digit to the result array.\r\n            qc[qi++] = cmp ? next : ++next;\r\n\r\n            // Update the remainder.\r\n            if (rem[0] && cmp) {\r\n                rem[remL] = dvd[dvdI] || 0;\r\n            } else {\r\n                rem = [ dvd[dvdI] ];\r\n            }\r\n\r\n        } while ((dvdI++ < dvdL || rem[0] !== u) && s--);\r\n\r\n        // Leading zero? Do not remove if result is simply zero (qi == 1).\r\n        if (!qc[0] && qi != 1) {\r\n\r\n            // There can't be more than one zero.\r\n            qc.shift();\r\n            q.e--;\r\n        }\r\n\r\n        // Round?\r\n        if (qi > digits) {\r\n            rnd(q, dp, Big.RM, rem[0] !== u);\r\n        }\r\n\r\n        return q;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this Big is equal to the value of Big y,\r\n     * otherwise returns false.\r\n     */\r\n    P.eq = function (y) {\r\n        return !this.cmp(y);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this Big is greater than the value of Big y,\r\n     * otherwise returns false.\r\n     */\r\n    P.gt = function (y) {\r\n        return this.cmp(y) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this Big is greater than or equal to the\r\n     * value of Big y, otherwise returns false.\r\n     */\r\n    P.gte = function (y) {\r\n        return this.cmp(y) > -1;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this Big is less than the value of Big y,\r\n     * otherwise returns false.\r\n     */\r\n    P.lt = function (y) {\r\n        return this.cmp(y) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this Big is less than or equal to the value\r\n     * of Big y, otherwise returns false.\r\n     */\r\n    P.lte = function (y) {\r\n         return this.cmp(y) < 1;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Big whose value is the value of this Big minus the value\r\n     * of Big y.\r\n     */\r\n    P.sub = P.minus = function (y) {\r\n        var i, j, t, xLTy,\r\n            x = this,\r\n            Big = x.constructor,\r\n            a = x.s,\r\n            b = (y = new Big(y)).s;\r\n\r\n        // Signs differ?\r\n        if (a != b) {\r\n            y.s = -b;\r\n            return x.plus(y);\r\n        }\r\n\r\n        var xc = x.c.slice(),\r\n            xe = x.e,\r\n            yc = y.c,\r\n            ye = y.e;\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n            // y is non-zero? x is non-zero? Or both are zero.\r\n            return yc[0] ? (y.s = -b, y) : new Big(xc[0] ? x : 0);\r\n        }\r\n\r\n        // Determine which is the bigger number.\r\n        // Prepend zeros to equalise exponents.\r\n        if (a = xe - ye) {\r\n\r\n            if (xLTy = a < 0) {\r\n                a = -a;\r\n                t = xc;\r\n            } else {\r\n                ye = xe;\r\n                t = yc;\r\n            }\r\n\r\n            t.reverse();\r\n            for (b = a; b--; t.push(0)) {\r\n            }\r\n            t.reverse();\r\n        } else {\r\n\r\n            // Exponents equal. Check digit by digit.\r\n            j = ((xLTy = xc.length < yc.length) ? xc : yc).length;\r\n\r\n            for (a = b = 0; b < j; b++) {\r\n\r\n                if (xc[b] != yc[b]) {\r\n                    xLTy = xc[b] < yc[b];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // x < y? Point xc to the array of the bigger number.\r\n        if (xLTy) {\r\n            t = xc;\r\n            xc = yc;\r\n            yc = t;\r\n            y.s = -y.s;\r\n        }\r\n\r\n        /*\r\n         * Append zeros to xc if shorter. No need to add zeros to yc if shorter\r\n         * as subtraction only needs to start at yc.length.\r\n         */\r\n        if (( b = (j = yc.length) - (i = xc.length) ) > 0) {\r\n\r\n            for (; b--; xc[i++] = 0) {\r\n            }\r\n        }\r\n\r\n        // Subtract yc from xc.\r\n        for (b = i; j > a;){\r\n\r\n            if (xc[--j] < yc[j]) {\r\n\r\n                for (i = j; i && !xc[--i]; xc[i] = 9) {\r\n                }\r\n                --xc[i];\r\n                xc[j] += 10;\r\n            }\r\n            xc[j] -= yc[j];\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--b] === 0; xc.pop()) {\r\n        }\r\n\r\n        // Remove leading zeros and adjust exponent accordingly.\r\n        for (; xc[0] === 0;) {\r\n            xc.shift();\r\n            --ye;\r\n        }\r\n\r\n        if (!xc[0]) {\r\n\r\n            // n - n = +0\r\n            y.s = 1;\r\n\r\n            // Result must be zero.\r\n            xc = [ye = 0];\r\n        }\r\n\r\n        y.c = xc;\r\n        y.e = ye;\r\n\r\n        return y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Big whose value is the value of this Big modulo the\r\n     * value of Big y.\r\n     */\r\n    P.mod = function (y) {\r\n        var yGTx,\r\n            x = this,\r\n            Big = x.constructor,\r\n            a = x.s,\r\n            b = (y = new Big(y)).s;\r\n\r\n        if (!y.c[0]) {\r\n            throwErr(NaN);\r\n        }\r\n\r\n        x.s = y.s = 1;\r\n        yGTx = y.cmp(x) == 1;\r\n        x.s = a;\r\n        y.s = b;\r\n\r\n        if (yGTx) {\r\n            return new Big(x);\r\n        }\r\n\r\n        a = Big.DP;\r\n        b = Big.RM;\r\n        Big.DP = Big.RM = 0;\r\n        x = x.div(y);\r\n        Big.DP = a;\r\n        Big.RM = b;\r\n\r\n        return this.minus( x.times(y) );\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Big whose value is the value of this Big plus the value\r\n     * of Big y.\r\n     */\r\n    P.add = P.plus = function (y) {\r\n        var t,\r\n            x = this,\r\n            Big = x.constructor,\r\n            a = x.s,\r\n            b = (y = new Big(y)).s;\r\n\r\n        // Signs differ?\r\n        if (a != b) {\r\n            y.s = -b;\r\n            return x.minus(y);\r\n        }\r\n\r\n        var xe = x.e,\r\n            xc = x.c,\r\n            ye = y.e,\r\n            yc = y.c;\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n            // y is non-zero? x is non-zero? Or both are zero.\r\n            return yc[0] ? y : new Big(xc[0] ? x : a * 0);\r\n        }\r\n        xc = xc.slice();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        // Note: Faster to use reverse then do unshifts.\r\n        if (a = xe - ye) {\r\n\r\n            if (a > 0) {\r\n                ye = xe;\r\n                t = yc;\r\n            } else {\r\n                a = -a;\r\n                t = xc;\r\n            }\r\n\r\n            t.reverse();\r\n            for (; a--; t.push(0)) {\r\n            }\r\n            t.reverse();\r\n        }\r\n\r\n        // Point xc to the longer array.\r\n        if (xc.length - yc.length < 0) {\r\n            t = yc;\r\n            yc = xc;\r\n            xc = t;\r\n        }\r\n        a = yc.length;\r\n\r\n        /*\r\n         * Only start adding at yc.length - 1 as the further digits of xc can be\r\n         * left as they are.\r\n         */\r\n        for (b = 0; a;) {\r\n            b = (xc[--a] = xc[a] + yc[a] + b) / 10 | 0;\r\n            xc[a] %= 10;\r\n        }\r\n\r\n        // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n        if (b) {\r\n            xc.unshift(b);\r\n            ++ye;\r\n        }\r\n\r\n         // Remove trailing zeros.\r\n        for (a = xc.length; xc[--a] === 0; xc.pop()) {\r\n        }\r\n\r\n        y.c = xc;\r\n        y.e = ye;\r\n\r\n        return y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a Big whose value is the value of this Big raised to the power n.\r\n     * If n is negative, round, if necessary, to a maximum of Big.DP decimal\r\n     * places using rounding mode Big.RM.\r\n     *\r\n     * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\r\n     */\r\n    P.pow = function (n) {\r\n        var x = this,\r\n            one = new x.constructor(1),\r\n            y = one,\r\n            isNeg = n < 0;\r\n\r\n        if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\r\n            throwErr('!pow!');\r\n        }\r\n\r\n        n = isNeg ? -n : n;\r\n\r\n        for (;;) {\r\n\r\n            if (n & 1) {\r\n                y = y.times(x);\r\n            }\r\n            n >>= 1;\r\n\r\n            if (!n) {\r\n                break;\r\n            }\r\n            x = x.times(x);\r\n        }\r\n\r\n        return isNeg ? one.div(y) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Big whose value is the value of this Big rounded to a\r\n     * maximum of dp decimal places using rounding mode rm.\r\n     * If dp is not specified, round to 0 decimal places.\r\n     * If rm is not specified, use Big.RM.\r\n     *\r\n     * [dp] {number} Integer, 0 to MAX_DP inclusive.\r\n     * [rm] 0, 1, 2 or 3 (ROUND_DOWN, ROUND_HALF_UP, ROUND_HALF_EVEN, ROUND_UP)\r\n     */\r\n    P.round = function (dp, rm) {\r\n        var x = this,\r\n            Big = x.constructor;\r\n\r\n        if (dp == null) {\r\n            dp = 0;\r\n        } else if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n            throwErr('!round!');\r\n        }\r\n        rnd(x = new Big(x), dp, rm == null ? Big.RM : rm);\r\n\r\n        return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Big whose value is the square root of the value of this Big,\r\n     * rounded, if necessary, to a maximum of Big.DP decimal places using\r\n     * rounding mode Big.RM.\r\n     */\r\n    P.sqrt = function () {\r\n        var estimate, r, approx,\r\n            x = this,\r\n            Big = x.constructor,\r\n            xc = x.c,\r\n            i = x.s,\r\n            e = x.e,\r\n            half = new Big('0.5');\r\n\r\n        // Zero?\r\n        if (!xc[0]) {\r\n            return new Big(x);\r\n        }\r\n\r\n        // If negative, throw NaN.\r\n        if (i < 0) {\r\n            throwErr(NaN);\r\n        }\r\n\r\n        // Estimate.\r\n        i = Math.sqrt(x.toString());\r\n\r\n        // Math.sqrt underflow/overflow?\r\n        // Pass x to Math.sqrt as integer, then adjust the result exponent.\r\n        if (i === 0 || i === 1 / 0) {\r\n            estimate = xc.join('');\r\n\r\n            if (!(estimate.length + e & 1)) {\r\n                estimate += '0';\r\n            }\r\n\r\n            r = new Big( Math.sqrt(estimate).toString() );\r\n            r.e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\r\n        } else {\r\n            r = new Big(i.toString());\r\n        }\r\n\r\n        i = r.e + (Big.DP += 4);\r\n\r\n        // Newton-Raphson iteration.\r\n        do {\r\n            approx = r;\r\n            r = half.times( approx.plus( x.div(approx) ) );\r\n        } while ( approx.c.slice(0, i).join('') !==\r\n                       r.c.slice(0, i).join('') );\r\n\r\n        rnd(r, Big.DP -= 4, Big.RM);\r\n\r\n        return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Big whose value is the value of this Big times the value of\r\n     * Big y.\r\n     */\r\n    P.mul = P.times = function (y) {\r\n        var c,\r\n            x = this,\r\n            Big = x.constructor,\r\n            xc = x.c,\r\n            yc = (y = new Big(y)).c,\r\n            a = xc.length,\r\n            b = yc.length,\r\n            i = x.e,\r\n            j = y.e;\r\n\r\n        // Determine sign of result.\r\n        y.s = x.s == y.s ? 1 : -1;\r\n\r\n        // Return signed 0 if either 0.\r\n        if (!xc[0] || !yc[0]) {\r\n            return new Big(y.s * 0);\r\n        }\r\n\r\n        // Initialise exponent of result as x.e + y.e.\r\n        y.e = i + j;\r\n\r\n        // If array xc has fewer digits than yc, swap xc and yc, and lengths.\r\n        if (a < b) {\r\n            c = xc;\r\n            xc = yc;\r\n            yc = c;\r\n            j = a;\r\n            a = b;\r\n            b = j;\r\n        }\r\n\r\n        // Initialise coefficient array of result with zeros.\r\n        for (c = new Array(j = a + b); j--; c[j] = 0) {\r\n        }\r\n\r\n        // Multiply.\r\n\r\n        // i is initially xc.length.\r\n        for (i = b; i--;) {\r\n            b = 0;\r\n\r\n            // a is yc.length.\r\n            for (j = a + i; j > i;) {\r\n\r\n                // Current sum of products at this digit position, plus carry.\r\n                b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n                c[j--] = b % 10;\r\n\r\n                // carry\r\n                b = b / 10 | 0;\r\n            }\r\n            c[j] = (c[j] + b) % 10;\r\n        }\r\n\r\n        // Increment result exponent if there is a final carry.\r\n        if (b) {\r\n            ++y.e;\r\n        }\r\n\r\n        // Remove any leading zero.\r\n        if (!c[0]) {\r\n            c.shift();\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = c.length; !c[--i]; c.pop()) {\r\n        }\r\n        y.c = c;\r\n\r\n        return y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this Big.\r\n     * Return exponential notation if this Big has a positive exponent equal to\r\n     * or greater than Big.E_POS, or a negative exponent equal to or less than\r\n     * Big.E_NEG.\r\n     */\r\n    P.toString = P.valueOf = P.toJSON = function () {\r\n        var x = this,\r\n            Big = x.constructor,\r\n            e = x.e,\r\n            str = x.c.join(''),\r\n            strL = str.length;\r\n\r\n        // Exponential notation?\r\n        if (e <= Big.E_NEG || e >= Big.E_POS) {\r\n            str = str.charAt(0) + (strL > 1 ? '.' + str.slice(1) : '') +\r\n              (e < 0 ? 'e' : 'e+') + e;\r\n\r\n        // Negative exponent?\r\n        } else if (e < 0) {\r\n\r\n            // Prepend zeros.\r\n            for (; ++e; str = '0' + str) {\r\n            }\r\n            str = '0.' + str;\r\n\r\n        // Positive exponent?\r\n        } else if (e > 0) {\r\n\r\n            if (++e > strL) {\r\n\r\n                // Append zeros.\r\n                for (e -= strL; e-- ; str += '0') {\r\n                }\r\n            } else if (e < strL) {\r\n                str = str.slice(0, e) + '.' + str.slice(e);\r\n            }\r\n\r\n        // Exponent zero.\r\n        } else if (strL > 1) {\r\n            str = str.charAt(0) + '.' + str.slice(1);\r\n        }\r\n\r\n        // Avoid '-0'\r\n        return x.s < 0 && x.c[0] ? '-' + str : str;\r\n    };\r\n\r\n\r\n    /*\r\n     ***************************************************************************\r\n     * If toExponential, toFixed, toPrecision and format are not required they\r\n     * can safely be commented-out or deleted. No redundant code will be left.\r\n     * format is used only by toExponential, toFixed and toPrecision.\r\n     ***************************************************************************\r\n     */\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this Big in exponential\r\n     * notation to dp fixed decimal places and rounded, if necessary, using\r\n     * Big.RM.\r\n     *\r\n     * [dp] {number} Integer, 0 to MAX_DP inclusive.\r\n     */\r\n    P.toExponential = function (dp) {\r\n\r\n        if (dp == null) {\r\n            dp = this.c.length - 1;\r\n        } else if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n            throwErr('!toExp!');\r\n        }\r\n\r\n        return format(this, dp, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this Big in normal notation\r\n     * to dp fixed decimal places and rounded, if necessary, using Big.RM.\r\n     *\r\n     * [dp] {number} Integer, 0 to MAX_DP inclusive.\r\n     */\r\n    P.toFixed = function (dp) {\r\n        var str,\r\n            x = this,\r\n            Big = x.constructor,\r\n            neg = Big.E_NEG,\r\n            pos = Big.E_POS;\r\n\r\n        // Prevent the possibility of exponential notation.\r\n        Big.E_NEG = -(Big.E_POS = 1 / 0);\r\n\r\n        if (dp == null) {\r\n            str = x.toString();\r\n        } else if (dp === ~~dp && dp >= 0 && dp <= MAX_DP) {\r\n            str = format(x, x.e + dp);\r\n\r\n            // (-0).toFixed() is '0', but (-0.1).toFixed() is '-0'.\r\n            // (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n            if (x.s < 0 && x.c[0] && str.indexOf('-') < 0) {\r\n        //E.g. -0.5 if rounded to -0 will cause toString to omit the minus sign.\r\n                str = '-' + str;\r\n            }\r\n        }\r\n        Big.E_NEG = neg;\r\n        Big.E_POS = pos;\r\n\r\n        if (!str) {\r\n            throwErr('!toFix!');\r\n        }\r\n\r\n        return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this Big rounded to sd\r\n     * significant digits using Big.RM. Use exponential notation if sd is less\r\n     * than the number of digits necessary to represent the integer part of the\r\n     * value in normal notation.\r\n     *\r\n     * sd {number} Integer, 1 to MAX_DP inclusive.\r\n     */\r\n    P.toPrecision = function (sd) {\r\n\r\n        if (sd == null) {\r\n            return this.toString();\r\n        } else if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n            throwErr('!toPre!');\r\n        }\r\n\r\n        return format(this, sd - 1, 2);\r\n    };\r\n\r\n\r\n    // Export\r\n\r\n\r\n    Big = bigFactory();\r\n\r\n    //AMD.\r\n    if (typeof define === 'function' && define.amd) {\r\n        define(function () {\r\n            return Big;\r\n        });\r\n\r\n    // Node and other CommonJS-like environments that support module.exports.\r\n    } else if (typeof module !== 'undefined' && module.exports) {\r\n        module.exports = Big;\r\n        module.exports.Big = Big;\r\n\r\n    //Browser.\r\n    } else {\r\n        global.Big = Big;\r\n    }\r\n})(this);\r\n","\"use strict\";\n\nconst baseEncodeTables = {\n\t26: \"abcdefghijklmnopqrstuvwxyz\",\n\t32: \"123456789abcdefghjkmnpqrstuvwxyz\", // no 0lio\n\t36: \"0123456789abcdefghijklmnopqrstuvwxyz\",\n\t49: \"abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\", // no lIO\n\t52: \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n\t58: \"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\", // no 0lIO\n\t62: \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n\t64: \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_\"\n};\n\nfunction encodeBufferToBase(buffer, base) {\n\tconst encodeTable = baseEncodeTables[base];\n\tif(!encodeTable) throw new Error(\"Unknown encoding base\" + base);\n\n\tconst readLength = buffer.length;\n\n\tconst Big = require(\"big.js\");\n\tBig.RM = Big.DP = 0;\n\tlet b = new Big(0);\n\tfor(let i = readLength - 1; i >= 0; i--) {\n\t\tb = b.times(256).plus(buffer[i]);\n\t}\n\n\tlet output = \"\";\n\twhile(b.gt(0)) {\n\t\toutput = encodeTable[b.mod(base)] + output;\n\t\tb = b.div(base);\n\t}\n\n\tBig.DP = 20;\n\tBig.RM = 1;\n\n\treturn output;\n}\n\nfunction getHashDigest(buffer, hashType, digestType, maxLength) {\n\thashType = hashType || \"md5\";\n\tmaxLength = maxLength || 9999;\n\tconst hash = require(\"crypto\").createHash(hashType);\n\thash.update(buffer);\n\tif(digestType === \"base26\" || digestType === \"base32\" || digestType === \"base36\" ||\n\t\tdigestType === \"base49\" || digestType === \"base52\" || digestType === \"base58\" ||\n\t\tdigestType === \"base62\" || digestType === \"base64\") {\n\t\treturn encodeBufferToBase(hash.digest(), digestType.substr(4)).substr(0, maxLength);\n\t} else {\n\t\treturn hash.digest(digestType || \"hex\").substr(0, maxLength);\n\t}\n}\n\nmodule.exports = getHashDigest;\n","module.exports = [\n  \"🀄\",\n  \"🃏\",\n  \"🅰\",\n  \"🅱\",\n  \"🅾\",\n  \"🅿\",\n  \"🆎\",\n  \"🆑\",\n  \"🆒\",\n  \"🆓\",\n  \"🆔\",\n  \"🆕\",\n  \"🆖\",\n  \"🆗\",\n  \"🆘\",\n  \"🆙\",\n  \"🆚\",\n  \"🇦🇨\",\n  \"🇦🇩\",\n  \"🇦🇪\",\n  \"🇦🇫\",\n  \"🇦🇬\",\n  \"🇦🇮\",\n  \"🇦🇱\",\n  \"🇦🇲\",\n  \"🇦🇴\",\n  \"🇦🇶\",\n  \"🇦🇷\",\n  \"🇦🇸\",\n  \"🇦🇹\",\n  \"🇦🇺\",\n  \"🇦🇼\",\n  \"🇦🇽\",\n  \"🇦🇿\",\n  \"🇦\",\n  \"🇧🇦\",\n  \"🇧🇧\",\n  \"🇧🇩\",\n  \"🇧🇪\",\n  \"🇧🇫\",\n  \"🇧🇬\",\n  \"🇧🇭\",\n  \"🇧🇮\",\n  \"🇧🇯\",\n  \"🇧🇱\",\n  \"🇧🇲\",\n  \"🇧🇳\",\n  \"🇧🇴\",\n  \"🇧🇶\",\n  \"🇧🇷\",\n  \"🇧🇸\",\n  \"🇧🇹\",\n  \"🇧🇻\",\n  \"🇧🇼\",\n  \"🇧🇾\",\n  \"🇧🇿\",\n  \"🇧\",\n  \"🇨🇦\",\n  \"🇨🇨\",\n  \"🇨🇩\",\n  \"🇨🇫\",\n  \"🇨🇬\",\n  \"🇨🇭\",\n  \"🇨🇮\",\n  \"🇨🇰\",\n  \"🇨🇱\",\n  \"🇨🇲\",\n  \"🇨🇳\",\n  \"🇨🇴\",\n  \"🇨🇵\",\n  \"🇨🇷\",\n  \"🇨🇺\",\n  \"🇨🇻\",\n  \"🇨🇼\",\n  \"🇨🇽\",\n  \"🇨🇾\",\n  \"🇨🇿\",\n  \"🇨\",\n  \"🇩🇪\",\n  \"🇩🇬\",\n  \"🇩🇯\",\n  \"🇩🇰\",\n  \"🇩🇲\",\n  \"🇩🇴\",\n  \"🇩🇿\",\n  \"🇩\",\n  \"🇪🇦\",\n  \"🇪🇨\",\n  \"🇪🇪\",\n  \"🇪🇬\",\n  \"🇪🇭\",\n  \"🇪🇷\",\n  \"🇪🇸\",\n  \"🇪🇹\",\n  \"🇪🇺\",\n  \"🇪\",\n  \"🇫🇮\",\n  \"🇫🇯\",\n  \"🇫🇰\",\n  \"🇫🇲\",\n  \"🇫🇴\",\n  \"🇫🇷\",\n  \"🇫\",\n  \"🇬🇦\",\n  \"🇬🇧\",\n  \"🇬🇩\",\n  \"🇬🇪\",\n  \"🇬🇫\",\n  \"🇬🇬\",\n  \"🇬🇭\",\n  \"🇬🇮\",\n  \"🇬🇱\",\n  \"🇬🇲\",\n  \"🇬🇳\",\n  \"🇬🇵\",\n  \"🇬🇶\",\n  \"🇬🇷\",\n  \"🇬🇸\",\n  \"🇬🇹\",\n  \"🇬🇺\",\n  \"🇬🇼\",\n  \"🇬🇾\",\n  \"🇬\",\n  \"🇭🇰\",\n  \"🇭🇲\",\n  \"🇭🇳\",\n  \"🇭🇷\",\n  \"🇭🇹\",\n  \"🇭🇺\",\n  \"🇭\",\n  \"🇮🇨\",\n  \"🇮🇩\",\n  \"🇮🇪\",\n  \"🇮🇱\",\n  \"🇮🇲\",\n  \"🇮🇳\",\n  \"🇮🇴\",\n  \"🇮🇶\",\n  \"🇮🇷\",\n  \"🇮🇸\",\n  \"🇮🇹\",\n  \"🇮\",\n  \"🇯🇪\",\n  \"🇯🇲\",\n  \"🇯🇴\",\n  \"🇯🇵\",\n  \"🇯\",\n  \"🇰🇪\",\n  \"🇰🇬\",\n  \"🇰🇭\",\n  \"🇰🇮\",\n  \"🇰🇲\",\n  \"🇰🇳\",\n  \"🇰🇵\",\n  \"🇰🇷\",\n  \"🇰🇼\",\n  \"🇰🇾\",\n  \"🇰🇿\",\n  \"🇰\",\n  \"🇱🇦\",\n  \"🇱🇧\",\n  \"🇱🇨\",\n  \"🇱🇮\",\n  \"🇱🇰\",\n  \"🇱🇷\",\n  \"🇱🇸\",\n  \"🇱🇹\",\n  \"🇱🇺\",\n  \"🇱🇻\",\n  \"🇱🇾\",\n  \"🇱\",\n  \"🇲🇦\",\n  \"🇲🇨\",\n  \"🇲🇩\",\n  \"🇲🇪\",\n  \"🇲🇫\",\n  \"🇲🇬\",\n  \"🇲🇭\",\n  \"🇲🇰\",\n  \"🇲🇱\",\n  \"🇲🇲\",\n  \"🇲🇳\",\n  \"🇲🇴\",\n  \"🇲🇵\",\n  \"🇲🇶\",\n  \"🇲🇷\",\n  \"🇲🇸\",\n  \"🇲🇹\",\n  \"🇲🇺\",\n  \"🇲🇻\",\n  \"🇲🇼\",\n  \"🇲🇽\",\n  \"🇲🇾\",\n  \"🇲🇿\",\n  \"🇲\",\n  \"🇳🇦\",\n  \"🇳🇨\",\n  \"🇳🇪\",\n  \"🇳🇫\",\n  \"🇳🇬\",\n  \"🇳🇮\",\n  \"🇳🇱\",\n  \"🇳🇴\",\n  \"🇳🇵\",\n  \"🇳🇷\",\n  \"🇳🇺\",\n  \"🇳🇿\",\n  \"🇳\",\n  \"🇴🇲\",\n  \"🇴\",\n  \"🇵🇦\",\n  \"🇵🇪\",\n  \"🇵🇫\",\n  \"🇵🇬\",\n  \"🇵🇭\",\n  \"🇵🇰\",\n  \"🇵🇱\",\n  \"🇵🇲\",\n  \"🇵🇳\",\n  \"🇵🇷\",\n  \"🇵🇸\",\n  \"🇵🇹\",\n  \"🇵🇼\",\n  \"🇵🇾\",\n  \"🇵\",\n  \"🇶🇦\",\n  \"🇶\",\n  \"🇷🇪\",\n  \"🇷🇴\",\n  \"🇷🇸\",\n  \"🇷🇺\",\n  \"🇷🇼\",\n  \"🇷\",\n  \"🇸🇦\",\n  \"🇸🇧\",\n  \"🇸🇨\",\n  \"🇸🇩\",\n  \"🇸🇪\",\n  \"🇸🇬\",\n  \"🇸🇭\",\n  \"🇸🇮\",\n  \"🇸🇯\",\n  \"🇸🇰\",\n  \"🇸🇱\",\n  \"🇸🇲\",\n  \"🇸🇳\",\n  \"🇸🇴\",\n  \"🇸🇷\",\n  \"🇸🇸\",\n  \"🇸🇹\",\n  \"🇸🇻\",\n  \"🇸🇽\",\n  \"🇸🇾\",\n  \"🇸🇿\",\n  \"🇸\",\n  \"🇹🇦\",\n  \"🇹🇨\",\n  \"🇹🇩\",\n  \"🇹🇫\",\n  \"🇹🇬\",\n  \"🇹🇭\",\n  \"🇹🇯\",\n  \"🇹🇰\",\n  \"🇹🇱\",\n  \"🇹🇲\",\n  \"🇹🇳\",\n  \"🇹🇴\",\n  \"🇹🇷\",\n  \"🇹🇹\",\n  \"🇹🇻\",\n  \"🇹🇼\",\n  \"🇹🇿\",\n  \"🇹\",\n  \"🇺🇦\",\n  \"🇺🇬\",\n  \"🇺🇲\",\n  \"🇺🇳\",\n  \"🇺🇸\",\n  \"🇺🇾\",\n  \"🇺🇿\",\n  \"🇺\",\n  \"🇻🇦\",\n  \"🇻🇨\",\n  \"🇻🇪\",\n  \"🇻🇬\",\n  \"🇻🇮\",\n  \"🇻🇳\",\n  \"🇻🇺\",\n  \"🇻\",\n  \"🇼🇫\",\n  \"🇼🇸\",\n  \"🇼\",\n  \"🇽🇰\",\n  \"🇽\",\n  \"🇾🇪\",\n  \"🇾🇹\",\n  \"🇾\",\n  \"🇿🇦\",\n  \"🇿🇲\",\n  \"🇿🇼\",\n  \"🇿\",\n  \"🈁\",\n  \"🈂\",\n  \"🈚\",\n  \"🈯\",\n  \"🈲\",\n  \"🈳\",\n  \"🈴\",\n  \"🈵\",\n  \"🈶\",\n  \"🈷\",\n  \"🈸\",\n  \"🈹\",\n  \"🈺\",\n  \"🉐\",\n  \"🉑\",\n  \"🌀\",\n  \"🌁\",\n  \"🌂\",\n  \"🌃\",\n  \"🌄\",\n  \"🌅\",\n  \"🌆\",\n  \"🌇\",\n  \"🌈\",\n  \"🌉\",\n  \"🌊\",\n  \"🌋\",\n  \"🌌\",\n  \"🌍\",\n  \"🌎\",\n  \"🌏\",\n  \"🌐\",\n  \"🌑\",\n  \"🌒\",\n  \"🌓\",\n  \"🌔\",\n  \"🌕\",\n  \"🌖\",\n  \"🌗\",\n  \"🌘\",\n  \"🌙\",\n  \"🌚\",\n  \"🌛\",\n  \"🌜\",\n  \"🌝\",\n  \"🌞\",\n  \"🌟\",\n  \"🌠\",\n  \"🌡\",\n  \"🌤\",\n  \"🌥\",\n  \"🌦\",\n  \"🌧\",\n  \"🌨\",\n  \"🌩\",\n  \"🌪\",\n  \"🌫\",\n  \"🌬\",\n  \"🌭\",\n  \"🌮\",\n  \"🌯\",\n  \"🌰\",\n  \"🌱\",\n  \"🌲\",\n  \"🌳\",\n  \"🌴\",\n  \"🌵\",\n  \"🌶\",\n  \"🌷\",\n  \"🌸\",\n  \"🌹\",\n  \"🌺\",\n  \"🌻\",\n  \"🌼\",\n  \"🌽\",\n  \"🌾\",\n  \"🌿\",\n  \"🍀\",\n  \"🍁\",\n  \"🍂\",\n  \"🍃\",\n  \"🍄\",\n  \"🍅\",\n  \"🍆\",\n  \"🍇\",\n  \"🍈\",\n  \"🍉\",\n  \"🍊\",\n  \"🍋\",\n  \"🍌\",\n  \"🍍\",\n  \"🍎\",\n  \"🍏\",\n  \"🍐\",\n  \"🍑\",\n  \"🍒\",\n  \"🍓\",\n  \"🍔\",\n  \"🍕\",\n  \"🍖\",\n  \"🍗\",\n  \"🍘\",\n  \"🍙\",\n  \"🍚\",\n  \"🍛\",\n  \"🍜\",\n  \"🍝\",\n  \"🍞\",\n  \"🍟\",\n  \"🍠\",\n  \"🍡\",\n  \"🍢\",\n  \"🍣\",\n  \"🍤\",\n  \"🍥\",\n  \"🍦\",\n  \"🍧\",\n  \"🍨\",\n  \"🍩\",\n  \"🍪\",\n  \"🍫\",\n  \"🍬\",\n  \"🍭\",\n  \"🍮\",\n  \"🍯\",\n  \"🍰\",\n  \"🍱\",\n  \"🍲\",\n  \"🍳\",\n  \"🍴\",\n  \"🍵\",\n  \"🍶\",\n  \"🍷\",\n  \"🍸\",\n  \"🍹\",\n  \"🍺\",\n  \"🍻\",\n  \"🍼\",\n  \"🍽\",\n  \"🍾\",\n  \"🍿\",\n  \"🎀\",\n  \"🎁\",\n  \"🎂\",\n  \"🎃\",\n  \"🎄\",\n  \"🎅🏻\",\n  \"🎅🏼\",\n  \"🎅🏽\",\n  \"🎅🏾\",\n  \"🎅🏿\",\n  \"🎅\",\n  \"🎆\",\n  \"🎇\",\n  \"🎈\",\n  \"🎉\",\n  \"🎊\",\n  \"🎋\",\n  \"🎌\",\n  \"🎍\",\n  \"🎎\",\n  \"🎏\",\n  \"🎐\",\n  \"🎑\",\n  \"🎒\",\n  \"🎓\",\n  \"🎖\",\n  \"🎗\",\n  \"🎙\",\n  \"🎚\",\n  \"🎛\",\n  \"🎞\",\n  \"🎟\",\n  \"🎠\",\n  \"🎡\",\n  \"🎢\",\n  \"🎣\",\n  \"🎤\",\n  \"🎥\",\n  \"🎦\",\n  \"🎧\",\n  \"🎨\",\n  \"🎩\",\n  \"🎪\",\n  \"🎫\",\n  \"🎬\",\n  \"🎭\",\n  \"🎮\",\n  \"🎯\",\n  \"🎰\",\n  \"🎱\",\n  \"🎲\",\n  \"🎳\",\n  \"🎴\",\n  \"🎵\",\n  \"🎶\",\n  \"🎷\",\n  \"🎸\",\n  \"🎹\",\n  \"🎺\",\n  \"🎻\",\n  \"🎼\",\n  \"🎽\",\n  \"🎾\",\n  \"🎿\",\n  \"🏀\",\n  \"🏁\",\n  \"🏂🏻\",\n  \"🏂🏼\",\n  \"🏂🏽\",\n  \"🏂🏾\",\n  \"🏂🏿\",\n  \"🏂\",\n  \"🏃🏻‍♀️\",\n  \"🏃🏻‍♂️\",\n  \"🏃🏻\",\n  \"🏃🏼‍♀️\",\n  \"🏃🏼‍♂️\",\n  \"🏃🏼\",\n  \"🏃🏽‍♀️\",\n  \"🏃🏽‍♂️\",\n  \"🏃🏽\",\n  \"🏃🏾‍♀️\",\n  \"🏃🏾‍♂️\",\n  \"🏃🏾\",\n  \"🏃🏿‍♀️\",\n  \"🏃🏿‍♂️\",\n  \"🏃🏿\",\n  \"🏃‍♀️\",\n  \"🏃‍♂️\",\n  \"🏃\",\n  \"🏄🏻‍♀️\",\n  \"🏄🏻‍♂️\",\n  \"🏄🏻\",\n  \"🏄🏼‍♀️\",\n  \"🏄🏼‍♂️\",\n  \"🏄🏼\",\n  \"🏄🏽‍♀️\",\n  \"🏄🏽‍♂️\",\n  \"🏄🏽\",\n  \"🏄🏾‍♀️\",\n  \"🏄🏾‍♂️\",\n  \"🏄🏾\",\n  \"🏄🏿‍♀️\",\n  \"🏄🏿‍♂️\",\n  \"🏄🏿\",\n  \"🏄‍♀️\",\n  \"🏄‍♂️\",\n  \"🏄\",\n  \"🏅\",\n  \"🏆\",\n  \"🏇🏻\",\n  \"🏇🏼\",\n  \"🏇🏽\",\n  \"🏇🏾\",\n  \"🏇🏿\",\n  \"🏇\",\n  \"🏈\",\n  \"🏉\",\n  \"🏊🏻‍♀️\",\n  \"🏊🏻‍♂️\",\n  \"🏊🏻\",\n  \"🏊🏼‍♀️\",\n  \"🏊🏼‍♂️\",\n  \"🏊🏼\",\n  \"🏊🏽‍♀️\",\n  \"🏊🏽‍♂️\",\n  \"🏊🏽\",\n  \"🏊🏾‍♀️\",\n  \"🏊🏾‍♂️\",\n  \"🏊🏾\",\n  \"🏊🏿‍♀️\",\n  \"🏊🏿‍♂️\",\n  \"🏊🏿\",\n  \"🏊‍♀️\",\n  \"🏊‍♂️\",\n  \"🏊\",\n  \"🏋🏻‍♀️\",\n  \"🏋🏻‍♂️\",\n  \"🏋🏻\",\n  \"🏋🏼‍♀️\",\n  \"🏋🏼‍♂️\",\n  \"🏋🏼\",\n  \"🏋🏽‍♀️\",\n  \"🏋🏽‍♂️\",\n  \"🏋🏽\",\n  \"🏋🏾‍♀️\",\n  \"🏋🏾‍♂️\",\n  \"🏋🏾\",\n  \"🏋🏿‍♀️\",\n  \"🏋🏿‍♂️\",\n  \"🏋🏿\",\n  \"🏋️‍♀️\",\n  \"🏋️‍♂️\",\n  \"🏋\",\n  \"🏌🏻‍♀️\",\n  \"🏌🏻‍♂️\",\n  \"🏌🏻\",\n  \"🏌🏼‍♀️\",\n  \"🏌🏼‍♂️\",\n  \"🏌🏼\",\n  \"🏌🏽‍♀️\",\n  \"🏌🏽‍♂️\",\n  \"🏌🏽\",\n  \"🏌🏾‍♀️\",\n  \"🏌🏾‍♂️\",\n  \"🏌🏾\",\n  \"🏌🏿‍♀️\",\n  \"🏌🏿‍♂️\",\n  \"🏌🏿\",\n  \"🏌️‍♀️\",\n  \"🏌️‍♂️\",\n  \"🏌\",\n  \"🏍\",\n  \"🏎\",\n  \"🏏\",\n  \"🏐\",\n  \"🏑\",\n  \"🏒\",\n  \"🏓\",\n  \"🏔\",\n  \"🏕\",\n  \"🏖\",\n  \"🏗\",\n  \"🏘\",\n  \"🏙\",\n  \"🏚\",\n  \"🏛\",\n  \"🏜\",\n  \"🏝\",\n  \"🏞\",\n  \"🏟\",\n  \"🏠\",\n  \"🏡\",\n  \"🏢\",\n  \"🏣\",\n  \"🏤\",\n  \"🏥\",\n  \"🏦\",\n  \"🏧\",\n  \"🏨\",\n  \"🏩\",\n  \"🏪\",\n  \"🏫\",\n  \"🏬\",\n  \"🏭\",\n  \"🏮\",\n  \"🏯\",\n  \"🏰\",\n  \"🏳️‍🌈\",\n  \"🏳\",\n  \"🏴‍☠️\",\n  \"🏴\",\n  \"🏵\",\n  \"🏷\",\n  \"🏸\",\n  \"🏹\",\n  \"🏺\",\n  \"🏻\",\n  \"🏼\",\n  \"🏽\",\n  \"🏾\",\n  \"🏿\",\n  \"🐀\",\n  \"🐁\",\n  \"🐂\",\n  \"🐃\",\n  \"🐄\",\n  \"🐅\",\n  \"🐆\",\n  \"🐇\",\n  \"🐈\",\n  \"🐉\",\n  \"🐊\",\n  \"🐋\",\n  \"🐌\",\n  \"🐍\",\n  \"🐎\",\n  \"🐏\",\n  \"🐐\",\n  \"🐑\",\n  \"🐒\",\n  \"🐓\",\n  \"🐔\",\n  \"🐕\",\n  \"🐖\",\n  \"🐗\",\n  \"🐘\",\n  \"🐙\",\n  \"🐚\",\n  \"🐛\",\n  \"🐜\",\n  \"🐝\",\n  \"🐞\",\n  \"🐟\",\n  \"🐠\",\n  \"🐡\",\n  \"🐢\",\n  \"🐣\",\n  \"🐤\",\n  \"🐥\",\n  \"🐦\",\n  \"🐧\",\n  \"🐨\",\n  \"🐩\",\n  \"🐪\",\n  \"🐫\",\n  \"🐬\",\n  \"🐭\",\n  \"🐮\",\n  \"🐯\",\n  \"🐰\",\n  \"🐱\",\n  \"🐲\",\n  \"🐳\",\n  \"🐴\",\n  \"🐵\",\n  \"🐶\",\n  \"🐷\",\n  \"🐸\",\n  \"🐹\",\n  \"🐺\",\n  \"🐻\",\n  \"🐼\",\n  \"🐽\",\n  \"🐾\",\n  \"🐿\",\n  \"👀\",\n  \"👁‍🗨\",\n  \"👁\",\n  \"👂🏻\",\n  \"👂🏼\",\n  \"👂🏽\",\n  \"👂🏾\",\n  \"👂🏿\",\n  \"👂\",\n  \"👃🏻\",\n  \"👃🏼\",\n  \"👃🏽\",\n  \"👃🏾\",\n  \"👃🏿\",\n  \"👃\",\n  \"👄\",\n  \"👅\",\n  \"👆🏻\",\n  \"👆🏼\",\n  \"👆🏽\",\n  \"👆🏾\",\n  \"👆🏿\",\n  \"👆\",\n  \"👇🏻\",\n  \"👇🏼\",\n  \"👇🏽\",\n  \"👇🏾\",\n  \"👇🏿\",\n  \"👇\",\n  \"👈🏻\",\n  \"👈🏼\",\n  \"👈🏽\",\n  \"👈🏾\",\n  \"👈🏿\",\n  \"👈\",\n  \"👉🏻\",\n  \"👉🏼\",\n  \"👉🏽\",\n  \"👉🏾\",\n  \"👉🏿\",\n  \"👉\",\n  \"👊🏻\",\n  \"👊🏼\",\n  \"👊🏽\",\n  \"👊🏾\",\n  \"👊🏿\",\n  \"👊\",\n  \"👋🏻\",\n  \"👋🏼\",\n  \"👋🏽\",\n  \"👋🏾\",\n  \"👋🏿\",\n  \"👋\",\n  \"👌🏻\",\n  \"👌🏼\",\n  \"👌🏽\",\n  \"👌🏾\",\n  \"👌🏿\",\n  \"👌\",\n  \"👍🏻\",\n  \"👍🏼\",\n  \"👍🏽\",\n  \"👍🏾\",\n  \"👍🏿\",\n  \"👍\",\n  \"👎🏻\",\n  \"👎🏼\",\n  \"👎🏽\",\n  \"👎🏾\",\n  \"👎🏿\",\n  \"👎\",\n  \"👏🏻\",\n  \"👏🏼\",\n  \"👏🏽\",\n  \"👏🏾\",\n  \"👏🏿\",\n  \"👏\",\n  \"👐🏻\",\n  \"👐🏼\",\n  \"👐🏽\",\n  \"👐🏾\",\n  \"👐🏿\",\n  \"👐\",\n  \"👑\",\n  \"👒\",\n  \"👓\",\n  \"👔\",\n  \"👕\",\n  \"👖\",\n  \"👗\",\n  \"👘\",\n  \"👙\",\n  \"👚\",\n  \"👛\",\n  \"👜\",\n  \"👝\",\n  \"👞\",\n  \"👟\",\n  \"👠\",\n  \"👡\",\n  \"👢\",\n  \"👣\",\n  \"👤\",\n  \"👥\",\n  \"👦🏻\",\n  \"👦🏼\",\n  \"👦🏽\",\n  \"👦🏾\",\n  \"👦🏿\",\n  \"👦\",\n  \"👧🏻\",\n  \"👧🏼\",\n  \"👧🏽\",\n  \"👧🏾\",\n  \"👧🏿\",\n  \"👧\",\n  \"👨🏻‍🌾\",\n  \"👨🏻‍🍳\",\n  \"👨🏻‍🎓\",\n  \"👨🏻‍🎤\",\n  \"👨🏻‍🎨\",\n  \"👨🏻‍🏫\",\n  \"👨🏻‍🏭\",\n  \"👨🏻‍💻\",\n  \"👨🏻‍💼\",\n  \"👨🏻‍🔧\",\n  \"👨🏻‍🔬\",\n  \"👨🏻‍🚀\",\n  \"👨🏻‍🚒\",\n  \"👨🏻‍⚕️\",\n  \"👨🏻‍⚖️\",\n  \"👨🏻‍✈️\",\n  \"👨🏻\",\n  \"👨🏼‍🌾\",\n  \"👨🏼‍🍳\",\n  \"👨🏼‍🎓\",\n  \"👨🏼‍🎤\",\n  \"👨🏼‍🎨\",\n  \"👨🏼‍🏫\",\n  \"👨🏼‍🏭\",\n  \"👨🏼‍💻\",\n  \"👨🏼‍💼\",\n  \"👨🏼‍🔧\",\n  \"👨🏼‍🔬\",\n  \"👨🏼‍🚀\",\n  \"👨🏼‍🚒\",\n  \"👨🏼‍⚕️\",\n  \"👨🏼‍⚖️\",\n  \"👨🏼‍✈️\",\n  \"👨🏼\",\n  \"👨🏽‍🌾\",\n  \"👨🏽‍🍳\",\n  \"👨🏽‍🎓\",\n  \"👨🏽‍🎤\",\n  \"👨🏽‍🎨\",\n  \"👨🏽‍🏫\",\n  \"👨🏽‍🏭\",\n  \"👨🏽‍💻\",\n  \"👨🏽‍💼\",\n  \"👨🏽‍🔧\",\n  \"👨🏽‍🔬\",\n  \"👨🏽‍🚀\",\n  \"👨🏽‍🚒\",\n  \"👨🏽‍⚕️\",\n  \"👨🏽‍⚖️\",\n  \"👨🏽‍✈️\",\n  \"👨🏽\",\n  \"👨🏾‍🌾\",\n  \"👨🏾‍🍳\",\n  \"👨🏾‍🎓\",\n  \"👨🏾‍🎤\",\n  \"👨🏾‍🎨\",\n  \"👨🏾‍🏫\",\n  \"👨🏾‍🏭\",\n  \"👨🏾‍💻\",\n  \"👨🏾‍💼\",\n  \"👨🏾‍🔧\",\n  \"👨🏾‍🔬\",\n  \"👨🏾‍🚀\",\n  \"👨🏾‍🚒\",\n  \"👨🏾‍⚕️\",\n  \"👨🏾‍⚖️\",\n  \"👨🏾‍✈️\",\n  \"👨🏾\",\n  \"👨🏿‍🌾\",\n  \"👨🏿‍🍳\",\n  \"👨🏿‍🎓\",\n  \"👨🏿‍🎤\",\n  \"👨🏿‍🎨\",\n  \"👨🏿‍🏫\",\n  \"👨🏿‍🏭\",\n  \"👨🏿‍💻\",\n  \"👨🏿‍💼\",\n  \"👨🏿‍🔧\",\n  \"👨🏿‍🔬\",\n  \"👨🏿‍🚀\",\n  \"👨🏿‍🚒\",\n  \"👨🏿‍⚕️\",\n  \"👨🏿‍⚖️\",\n  \"👨🏿‍✈️\",\n  \"👨🏿\",\n  \"👨‍🌾\",\n  \"👨‍🍳\",\n  \"👨‍🎓\",\n  \"👨‍🎤\",\n  \"👨‍🎨\",\n  \"👨‍🏫\",\n  \"👨‍🏭\",\n  \"👨‍👦‍👦\",\n  \"👨‍👦\",\n  \"👨‍👧‍👦\",\n  \"👨‍👧‍👧\",\n  \"👨‍👧\",\n  \"👨‍👨‍👦‍👦\",\n  \"👨‍👨‍👦\",\n  \"👨‍👨‍👧‍👦\",\n  \"👨‍👨‍👧‍👧\",\n  \"👨‍👨‍👧\",\n  \"👨‍👩‍👦‍👦\",\n  \"👨‍👩‍👦\",\n  \"👨‍👩‍👧‍👦\",\n  \"👨‍👩‍👧‍👧\",\n  \"👨‍👩‍👧\",\n  \"👨‍💻\",\n  \"👨‍💼\",\n  \"👨‍🔧\",\n  \"👨‍🔬\",\n  \"👨‍🚀\",\n  \"👨‍🚒\",\n  \"👨‍⚕️\",\n  \"👨‍⚖️\",\n  \"👨‍✈️\",\n  \"👨‍❤️‍👨\",\n  \"👨‍❤️‍💋‍👨\",\n  \"👨\",\n  \"👩🏻‍🌾\",\n  \"👩🏻‍🍳\",\n  \"👩🏻‍🎓\",\n  \"👩🏻‍🎤\",\n  \"👩🏻‍🎨\",\n  \"👩🏻‍🏫\",\n  \"👩🏻‍🏭\",\n  \"👩🏻‍💻\",\n  \"👩🏻‍💼\",\n  \"👩🏻‍🔧\",\n  \"👩🏻‍🔬\",\n  \"👩🏻‍🚀\",\n  \"👩🏻‍🚒\",\n  \"👩🏻‍⚕️\",\n  \"👩🏻‍⚖️\",\n  \"👩🏻‍✈️\",\n  \"👩🏻\",\n  \"👩🏼‍🌾\",\n  \"👩🏼‍🍳\",\n  \"👩🏼‍🎓\",\n  \"👩🏼‍🎤\",\n  \"👩🏼‍🎨\",\n  \"👩🏼‍🏫\",\n  \"👩🏼‍🏭\",\n  \"👩🏼‍💻\",\n  \"👩🏼‍💼\",\n  \"👩🏼‍🔧\",\n  \"👩🏼‍🔬\",\n  \"👩🏼‍🚀\",\n  \"👩🏼‍🚒\",\n  \"👩🏼‍⚕️\",\n  \"👩🏼‍⚖️\",\n  \"👩🏼‍✈️\",\n  \"👩🏼\",\n  \"👩🏽‍🌾\",\n  \"👩🏽‍🍳\",\n  \"👩🏽‍🎓\",\n  \"👩🏽‍🎤\",\n  \"👩🏽‍🎨\",\n  \"👩🏽‍🏫\",\n  \"👩🏽‍🏭\",\n  \"👩🏽‍💻\",\n  \"👩🏽‍💼\",\n  \"👩🏽‍🔧\",\n  \"👩🏽‍🔬\",\n  \"👩🏽‍🚀\",\n  \"👩🏽‍🚒\",\n  \"👩🏽‍⚕️\",\n  \"👩🏽‍⚖️\",\n  \"👩🏽‍✈️\",\n  \"👩🏽\",\n  \"👩🏾‍🌾\",\n  \"👩🏾‍🍳\",\n  \"👩🏾‍🎓\",\n  \"👩🏾‍🎤\",\n  \"👩🏾‍🎨\",\n  \"👩🏾‍🏫\",\n  \"👩🏾‍🏭\",\n  \"👩🏾‍💻\",\n  \"👩🏾‍💼\",\n  \"👩🏾‍🔧\",\n  \"👩🏾‍🔬\",\n  \"👩🏾‍🚀\",\n  \"👩🏾‍🚒\",\n  \"👩🏾‍⚕️\",\n  \"👩🏾‍⚖️\",\n  \"👩🏾‍✈️\",\n  \"👩🏾\",\n  \"👩🏿‍🌾\",\n  \"👩🏿‍🍳\",\n  \"👩🏿‍🎓\",\n  \"👩🏿‍🎤\",\n  \"👩🏿‍🎨\",\n  \"👩🏿‍🏫\",\n  \"👩🏿‍🏭\",\n  \"👩🏿‍💻\",\n  \"👩🏿‍💼\",\n  \"👩🏿‍🔧\",\n  \"👩🏿‍🔬\",\n  \"👩🏿‍🚀\",\n  \"👩🏿‍🚒\",\n  \"👩🏿‍⚕️\",\n  \"👩🏿‍⚖️\",\n  \"👩🏿‍✈️\",\n  \"👩🏿\",\n  \"👩‍🌾\",\n  \"👩‍🍳\",\n  \"👩‍🎓\",\n  \"👩‍🎤\",\n  \"👩‍🎨\",\n  \"👩‍🏫\",\n  \"👩‍🏭\",\n  \"👩‍👦‍👦\",\n  \"👩‍👦\",\n  \"👩‍👧‍👦\",\n  \"👩‍👧‍👧\",\n  \"👩‍👧\",\n  \"👩‍👩‍👦‍👦\",\n  \"👩‍👩‍👦\",\n  \"👩‍👩‍👧‍👦\",\n  \"👩‍👩‍👧‍👧\",\n  \"👩‍👩‍👧\",\n  \"👩‍💻\",\n  \"👩‍💼\",\n  \"👩‍🔧\",\n  \"👩‍🔬\",\n  \"👩‍🚀\",\n  \"👩‍🚒\",\n  \"👩‍⚕️\",\n  \"👩‍⚖️\",\n  \"👩‍✈️\",\n  \"👩‍❤️‍👨\",\n  \"👩‍❤️‍👩\",\n  \"👩‍❤️‍💋‍👨\",\n  \"👩‍❤️‍💋‍👩\",\n  \"👩\",\n  \"👪🏻\",\n  \"👪🏼\",\n  \"👪🏽\",\n  \"👪🏾\",\n  \"👪🏿\",\n  \"👪\",\n  \"👫🏻\",\n  \"👫🏼\",\n  \"👫🏽\",\n  \"👫🏾\",\n  \"👫🏿\",\n  \"👫\",\n  \"👬🏻\",\n  \"👬🏼\",\n  \"👬🏽\",\n  \"👬🏾\",\n  \"👬🏿\",\n  \"👬\",\n  \"👭🏻\",\n  \"👭🏼\",\n  \"👭🏽\",\n  \"👭🏾\",\n  \"👭🏿\",\n  \"👭\",\n  \"👮🏻‍♀️\",\n  \"👮🏻‍♂️\",\n  \"👮🏻\",\n  \"👮🏼‍♀️\",\n  \"👮🏼‍♂️\",\n  \"👮🏼\",\n  \"👮🏽‍♀️\",\n  \"👮🏽‍♂️\",\n  \"👮🏽\",\n  \"👮🏾‍♀️\",\n  \"👮🏾‍♂️\",\n  \"👮🏾\",\n  \"👮🏿‍♀️\",\n  \"👮🏿‍♂️\",\n  \"👮🏿\",\n  \"👮‍♀️\",\n  \"👮‍♂️\",\n  \"👮\",\n  \"👯🏻‍♀️\",\n  \"👯🏻‍♂️\",\n  \"👯🏻\",\n  \"👯🏼‍♀️\",\n  \"👯🏼‍♂️\",\n  \"👯🏼\",\n  \"👯🏽‍♀️\",\n  \"👯🏽‍♂️\",\n  \"👯🏽\",\n  \"👯🏾‍♀️\",\n  \"👯🏾‍♂️\",\n  \"👯🏾\",\n  \"👯🏿‍♀️\",\n  \"👯🏿‍♂️\",\n  \"👯🏿\",\n  \"👯‍♀️\",\n  \"👯‍♂️\",\n  \"👯\",\n  \"👰🏻\",\n  \"👰🏼\",\n  \"👰🏽\",\n  \"👰🏾\",\n  \"👰🏿\",\n  \"👰\",\n  \"👱🏻‍♀️\",\n  \"👱🏻‍♂️\",\n  \"👱🏻\",\n  \"👱🏼‍♀️\",\n  \"👱🏼‍♂️\",\n  \"👱🏼\",\n  \"👱🏽‍♀️\",\n  \"👱🏽‍♂️\",\n  \"👱🏽\",\n  \"👱🏾‍♀️\",\n  \"👱🏾‍♂️\",\n  \"👱🏾\",\n  \"👱🏿‍♀️\",\n  \"👱🏿‍♂️\",\n  \"👱🏿\",\n  \"👱‍♀️\",\n  \"👱‍♂️\",\n  \"👱\",\n  \"👲🏻\",\n  \"👲🏼\",\n  \"👲🏽\",\n  \"👲🏾\",\n  \"👲🏿\",\n  \"👲\",\n  \"👳🏻‍♀️\",\n  \"👳🏻‍♂️\",\n  \"👳🏻\",\n  \"👳🏼‍♀️\",\n  \"👳🏼‍♂️\",\n  \"👳🏼\",\n  \"👳🏽‍♀️\",\n  \"👳🏽‍♂️\",\n  \"👳🏽\",\n  \"👳🏾‍♀️\",\n  \"👳🏾‍♂️\",\n  \"👳🏾\",\n  \"👳🏿‍♀️\",\n  \"👳🏿‍♂️\",\n  \"👳🏿\",\n  \"👳‍♀️\",\n  \"👳‍♂️\",\n  \"👳\",\n  \"👴🏻\",\n  \"👴🏼\",\n  \"👴🏽\",\n  \"👴🏾\",\n  \"👴🏿\",\n  \"👴\",\n  \"👵🏻\",\n  \"👵🏼\",\n  \"👵🏽\",\n  \"👵🏾\",\n  \"👵🏿\",\n  \"👵\",\n  \"👶🏻\",\n  \"👶🏼\",\n  \"👶🏽\",\n  \"👶🏾\",\n  \"👶🏿\",\n  \"👶\",\n  \"👷🏻‍♀️\",\n  \"👷🏻‍♂️\",\n  \"👷🏻\",\n  \"👷🏼‍♀️\",\n  \"👷🏼‍♂️\",\n  \"👷🏼\",\n  \"👷🏽‍♀️\",\n  \"👷🏽‍♂️\",\n  \"👷🏽\",\n  \"👷🏾‍♀️\",\n  \"👷🏾‍♂️\",\n  \"👷🏾\",\n  \"👷🏿‍♀️\",\n  \"👷🏿‍♂️\",\n  \"👷🏿\",\n  \"👷‍♀️\",\n  \"👷‍♂️\",\n  \"👷\",\n  \"👸🏻\",\n  \"👸🏼\",\n  \"👸🏽\",\n  \"👸🏾\",\n  \"👸🏿\",\n  \"👸\",\n  \"👹\",\n  \"👺\",\n  \"👻\",\n  \"👼🏻\",\n  \"👼🏼\",\n  \"👼🏽\",\n  \"👼🏾\",\n  \"👼🏿\",\n  \"👼\",\n  \"👽\",\n  \"👾\",\n  \"👿\",\n  \"💀\",\n  \"💁🏻‍♀️\",\n  \"💁🏻‍♂️\",\n  \"💁🏻\",\n  \"💁🏼‍♀️\",\n  \"💁🏼‍♂️\",\n  \"💁🏼\",\n  \"💁🏽‍♀️\",\n  \"💁🏽‍♂️\",\n  \"💁🏽\",\n  \"💁🏾‍♀️\",\n  \"💁🏾‍♂️\",\n  \"💁🏾\",\n  \"💁🏿‍♀️\",\n  \"💁🏿‍♂️\",\n  \"💁🏿\",\n  \"💁‍♀️\",\n  \"💁‍♂️\",\n  \"💁\",\n  \"💂🏻‍♀️\",\n  \"💂🏻‍♂️\",\n  \"💂🏻\",\n  \"💂🏼‍♀️\",\n  \"💂🏼‍♂️\",\n  \"💂🏼\",\n  \"💂🏽‍♀️\",\n  \"💂🏽‍♂️\",\n  \"💂🏽\",\n  \"💂🏾‍♀️\",\n  \"💂🏾‍♂️\",\n  \"💂🏾\",\n  \"💂🏿‍♀️\",\n  \"💂🏿‍♂️\",\n  \"💂🏿\",\n  \"💂‍♀️\",\n  \"💂‍♂️\",\n  \"💂\",\n  \"💃🏻\",\n  \"💃🏼\",\n  \"💃🏽\",\n  \"💃🏾\",\n  \"💃🏿\",\n  \"💃\",\n  \"💄\",\n  \"💅🏻\",\n  \"💅🏼\",\n  \"💅🏽\",\n  \"💅🏾\",\n  \"💅🏿\",\n  \"💅\",\n  \"💆🏻‍♀️\",\n  \"💆🏻‍♂️\",\n  \"💆🏻\",\n  \"💆🏼‍♀️\",\n  \"💆🏼‍♂️\",\n  \"💆🏼\",\n  \"💆🏽‍♀️\",\n  \"💆🏽‍♂️\",\n  \"💆🏽\",\n  \"💆🏾‍♀️\",\n  \"💆🏾‍♂️\",\n  \"💆🏾\",\n  \"💆🏿‍♀️\",\n  \"💆🏿‍♂️\",\n  \"💆🏿\",\n  \"💆‍♀️\",\n  \"💆‍♂️\",\n  \"💆\",\n  \"💇🏻‍♀️\",\n  \"💇🏻‍♂️\",\n  \"💇🏻\",\n  \"💇🏼‍♀️\",\n  \"💇🏼‍♂️\",\n  \"💇🏼\",\n  \"💇🏽‍♀️\",\n  \"💇🏽‍♂️\",\n  \"💇🏽\",\n  \"💇🏾‍♀️\",\n  \"💇🏾‍♂️\",\n  \"💇🏾\",\n  \"💇🏿‍♀️\",\n  \"💇🏿‍♂️\",\n  \"💇🏿\",\n  \"💇‍♀️\",\n  \"💇‍♂️\",\n  \"💇\",\n  \"💈\",\n  \"💉\",\n  \"💊\",\n  \"💋\",\n  \"💌\",\n  \"💍\",\n  \"💎\",\n  \"💏\",\n  \"💐\",\n  \"💑\",\n  \"💒\",\n  \"💓\",\n  \"💔\",\n  \"💕\",\n  \"💖\",\n  \"💗\",\n  \"💘\",\n  \"💙\",\n  \"💚\",\n  \"💛\",\n  \"💜\",\n  \"💝\",\n  \"💞\",\n  \"💟\",\n  \"💠\",\n  \"💡\",\n  \"💢\",\n  \"💣\",\n  \"💤\",\n  \"💥\",\n  \"💦\",\n  \"💧\",\n  \"💨\",\n  \"💩\",\n  \"💪🏻\",\n  \"💪🏼\",\n  \"💪🏽\",\n  \"💪🏾\",\n  \"💪🏿\",\n  \"💪\",\n  \"💫\",\n  \"💬\",\n  \"💭\",\n  \"💮\",\n  \"💯\",\n  \"💰\",\n  \"💱\",\n  \"💲\",\n  \"💳\",\n  \"💴\",\n  \"💵\",\n  \"💶\",\n  \"💷\",\n  \"💸\",\n  \"💹\",\n  \"💺\",\n  \"💻\",\n  \"💼\",\n  \"💽\",\n  \"💾\",\n  \"💿\",\n  \"📀\",\n  \"📁\",\n  \"📂\",\n  \"📃\",\n  \"📄\",\n  \"📅\",\n  \"📆\",\n  \"📇\",\n  \"📈\",\n  \"📉\",\n  \"📊\",\n  \"📋\",\n  \"📌\",\n  \"📍\",\n  \"📎\",\n  \"📏\",\n  \"📐\",\n  \"📑\",\n  \"📒\",\n  \"📓\",\n  \"📔\",\n  \"📕\",\n  \"📖\",\n  \"📗\",\n  \"📘\",\n  \"📙\",\n  \"📚\",\n  \"📛\",\n  \"📜\",\n  \"📝\",\n  \"📞\",\n  \"📟\",\n  \"📠\",\n  \"📡\",\n  \"📢\",\n  \"📣\",\n  \"📤\",\n  \"📥\",\n  \"📦\",\n  \"📧\",\n  \"📨\",\n  \"📩\",\n  \"📪\",\n  \"📫\",\n  \"📬\",\n  \"📭\",\n  \"📮\",\n  \"📯\",\n  \"📰\",\n  \"📱\",\n  \"📲\",\n  \"📳\",\n  \"📴\",\n  \"📵\",\n  \"📶\",\n  \"📷\",\n  \"📸\",\n  \"📹\",\n  \"📺\",\n  \"📻\",\n  \"📼\",\n  \"📽\",\n  \"📿\",\n  \"🔀\",\n  \"🔁\",\n  \"🔂\",\n  \"🔃\",\n  \"🔄\",\n  \"🔅\",\n  \"🔆\",\n  \"🔇\",\n  \"🔈\",\n  \"🔉\",\n  \"🔊\",\n  \"🔋\",\n  \"🔌\",\n  \"🔍\",\n  \"🔎\",\n  \"🔏\",\n  \"🔐\",\n  \"🔑\",\n  \"🔒\",\n  \"🔓\",\n  \"🔔\",\n  \"🔕\",\n  \"🔖\",\n  \"🔗\",\n  \"🔘\",\n  \"🔙\",\n  \"🔚\",\n  \"🔛\",\n  \"🔜\",\n  \"🔝\",\n  \"🔞\",\n  \"🔟\",\n  \"🔠\",\n  \"🔡\",\n  \"🔢\",\n  \"🔣\",\n  \"🔤\",\n  \"🔥\",\n  \"🔦\",\n  \"🔧\",\n  \"🔨\",\n  \"🔩\",\n  \"🔪\",\n  \"🔫\",\n  \"🔬\",\n  \"🔭\",\n  \"🔮\",\n  \"🔯\",\n  \"🔰\",\n  \"🔱\",\n  \"🔲\",\n  \"🔳\",\n  \"🔴\",\n  \"🔵\",\n  \"🔶\",\n  \"🔷\",\n  \"🔸\",\n  \"🔹\",\n  \"🔺\",\n  \"🔻\",\n  \"🔼\",\n  \"🔽\",\n  \"🕉\",\n  \"🕊\",\n  \"🕋\",\n  \"🕌\",\n  \"🕍\",\n  \"🕎\",\n  \"🕐\",\n  \"🕑\",\n  \"🕒\",\n  \"🕓\",\n  \"🕔\",\n  \"🕕\",\n  \"🕖\",\n  \"🕗\",\n  \"🕘\",\n  \"🕙\",\n  \"🕚\",\n  \"🕛\",\n  \"🕜\",\n  \"🕝\",\n  \"🕞\",\n  \"🕟\",\n  \"🕠\",\n  \"🕡\",\n  \"🕢\",\n  \"🕣\",\n  \"🕤\",\n  \"🕥\",\n  \"🕦\",\n  \"🕧\",\n  \"🕯\",\n  \"🕰\",\n  \"🕳\",\n  \"🕴🏻\",\n  \"🕴🏼\",\n  \"🕴🏽\",\n  \"🕴🏾\",\n  \"🕴🏿\",\n  \"🕴\",\n  \"🕵🏻‍♀️\",\n  \"🕵🏻‍♂️\",\n  \"🕵🏻\",\n  \"🕵🏼‍♀️\",\n  \"🕵🏼‍♂️\",\n  \"🕵🏼\",\n  \"🕵🏽‍♀️\",\n  \"🕵🏽‍♂️\",\n  \"🕵🏽\",\n  \"🕵🏾‍♀️\",\n  \"🕵🏾‍♂️\",\n  \"🕵🏾\",\n  \"🕵🏿‍♀️\",\n  \"🕵🏿‍♂️\",\n  \"🕵🏿\",\n  \"🕵️‍♀️\",\n  \"🕵️‍♂️\",\n  \"🕵\",\n  \"🕶\",\n  \"🕷\",\n  \"🕸\",\n  \"🕹\",\n  \"🕺🏻\",\n  \"🕺🏼\",\n  \"🕺🏽\",\n  \"🕺🏾\",\n  \"🕺🏿\",\n  \"🕺\",\n  \"🖇\",\n  \"🖊\",\n  \"🖋\",\n  \"🖌\",\n  \"🖍\",\n  \"🖐🏻\",\n  \"🖐🏼\",\n  \"🖐🏽\",\n  \"🖐🏾\",\n  \"🖐🏿\",\n  \"🖐\",\n  \"🖕🏻\",\n  \"🖕🏼\",\n  \"🖕🏽\",\n  \"🖕🏾\",\n  \"🖕🏿\",\n  \"🖕\",\n  \"🖖🏻\",\n  \"🖖🏼\",\n  \"🖖🏽\",\n  \"🖖🏾\",\n  \"🖖🏿\",\n  \"🖖\",\n  \"🖤\",\n  \"🖥\",\n  \"🖨\",\n  \"🖱\",\n  \"🖲\",\n  \"🖼\",\n  \"🗂\",\n  \"🗃\",\n  \"🗄\",\n  \"🗑\",\n  \"🗒\",\n  \"🗓\",\n  \"🗜\",\n  \"🗝\",\n  \"🗞\",\n  \"🗡\",\n  \"🗣\",\n  \"🗨\",\n  \"🗯\",\n  \"🗳\",\n  \"🗺\",\n  \"🗻\",\n  \"🗼\",\n  \"🗽\",\n  \"🗾\",\n  \"🗿\",\n  \"😀\",\n  \"😁\",\n  \"😂\",\n  \"😃\",\n  \"😄\",\n  \"😅\",\n  \"😆\",\n  \"😇\",\n  \"😈\",\n  \"😉\",\n  \"😊\",\n  \"😋\",\n  \"😌\",\n  \"😍\",\n  \"😎\",\n  \"😏\",\n  \"😐\",\n  \"😑\",\n  \"😒\",\n  \"😓\",\n  \"😔\",\n  \"😕\",\n  \"😖\",\n  \"😗\",\n  \"😘\",\n  \"😙\",\n  \"😚\",\n  \"😛\",\n  \"😜\",\n  \"😝\",\n  \"😞\",\n  \"😟\",\n  \"😠\",\n  \"😡\",\n  \"😢\",\n  \"😣\",\n  \"😤\",\n  \"😥\",\n  \"😦\",\n  \"😧\",\n  \"😨\",\n  \"😩\",\n  \"😪\",\n  \"😫\",\n  \"😬\",\n  \"😭\",\n  \"😮\",\n  \"😯\",\n  \"😰\",\n  \"😱\",\n  \"😲\",\n  \"😳\",\n  \"😴\",\n  \"😵\",\n  \"😶\",\n  \"😷\",\n  \"😸\",\n  \"😹\",\n  \"😺\",\n  \"😻\",\n  \"😼\",\n  \"😽\",\n  \"😾\",\n  \"😿\",\n  \"🙀\",\n  \"🙁\",\n  \"🙂\",\n  \"🙃\",\n  \"🙄\",\n  \"🙅🏻‍♀️\",\n  \"🙅🏻‍♂️\",\n  \"🙅🏻\",\n  \"🙅🏼‍♀️\",\n  \"🙅🏼‍♂️\",\n  \"🙅🏼\",\n  \"🙅🏽‍♀️\",\n  \"🙅🏽‍♂️\",\n  \"🙅🏽\",\n  \"🙅🏾‍♀️\",\n  \"🙅🏾‍♂️\",\n  \"🙅🏾\",\n  \"🙅🏿‍♀️\",\n  \"🙅🏿‍♂️\",\n  \"🙅🏿\",\n  \"🙅‍♀️\",\n  \"🙅‍♂️\",\n  \"🙅\",\n  \"🙆🏻‍♀️\",\n  \"🙆🏻‍♂️\",\n  \"🙆🏻\",\n  \"🙆🏼‍♀️\",\n  \"🙆🏼‍♂️\",\n  \"🙆🏼\",\n  \"🙆🏽‍♀️\",\n  \"🙆🏽‍♂️\",\n  \"🙆🏽\",\n  \"🙆🏾‍♀️\",\n  \"🙆🏾‍♂️\",\n  \"🙆🏾\",\n  \"🙆🏿‍♀️\",\n  \"🙆🏿‍♂️\",\n  \"🙆🏿\",\n  \"🙆‍♀️\",\n  \"🙆‍♂️\",\n  \"🙆\",\n  \"🙇🏻‍♀️\",\n  \"🙇🏻‍♂️\",\n  \"🙇🏻\",\n  \"🙇🏼‍♀️\",\n  \"🙇🏼‍♂️\",\n  \"🙇🏼\",\n  \"🙇🏽‍♀️\",\n  \"🙇🏽‍♂️\",\n  \"🙇🏽\",\n  \"🙇🏾‍♀️\",\n  \"🙇🏾‍♂️\",\n  \"🙇🏾\",\n  \"🙇🏿‍♀️\",\n  \"🙇🏿‍♂️\",\n  \"🙇🏿\",\n  \"🙇‍♀️\",\n  \"🙇‍♂️\",\n  \"🙇\",\n  \"🙈\",\n  \"🙉\",\n  \"🙊\",\n  \"🙋🏻‍♀️\",\n  \"🙋🏻‍♂️\",\n  \"🙋🏻\",\n  \"🙋🏼‍♀️\",\n  \"🙋🏼‍♂️\",\n  \"🙋🏼\",\n  \"🙋🏽‍♀️\",\n  \"🙋🏽‍♂️\",\n  \"🙋🏽\",\n  \"🙋🏾‍♀️\",\n  \"🙋🏾‍♂️\",\n  \"🙋🏾\",\n  \"🙋🏿‍♀️\",\n  \"🙋🏿‍♂️\",\n  \"🙋🏿\",\n  \"🙋‍♀️\",\n  \"🙋‍♂️\",\n  \"🙋\",\n  \"🙌🏻\",\n  \"🙌🏼\",\n  \"🙌🏽\",\n  \"🙌🏾\",\n  \"🙌🏿\",\n  \"🙌\",\n  \"🙍🏻‍♀️\",\n  \"🙍🏻‍♂️\",\n  \"🙍🏻\",\n  \"🙍🏼‍♀️\",\n  \"🙍🏼‍♂️\",\n  \"🙍🏼\",\n  \"🙍🏽‍♀️\",\n  \"🙍🏽‍♂️\",\n  \"🙍🏽\",\n  \"🙍🏾‍♀️\",\n  \"🙍🏾‍♂️\",\n  \"🙍🏾\",\n  \"🙍🏿‍♀️\",\n  \"🙍🏿‍♂️\",\n  \"🙍🏿\",\n  \"🙍‍♀️\",\n  \"🙍‍♂️\",\n  \"🙍\",\n  \"🙎🏻‍♀️\",\n  \"🙎🏻‍♂️\",\n  \"🙎🏻\",\n  \"🙎🏼‍♀️\",\n  \"🙎🏼‍♂️\",\n  \"🙎🏼\",\n  \"🙎🏽‍♀️\",\n  \"🙎🏽‍♂️\",\n  \"🙎🏽\",\n  \"🙎🏾‍♀️\",\n  \"🙎🏾‍♂️\",\n  \"🙎🏾\",\n  \"🙎🏿‍♀️\",\n  \"🙎🏿‍♂️\",\n  \"🙎🏿\",\n  \"🙎‍♀️\",\n  \"🙎‍♂️\",\n  \"🙎\",\n  \"🙏🏻\",\n  \"🙏🏼\",\n  \"🙏🏽\",\n  \"🙏🏾\",\n  \"🙏🏿\",\n  \"🙏\",\n  \"🚀\",\n  \"🚁\",\n  \"🚂\",\n  \"🚃\",\n  \"🚄\",\n  \"🚅\",\n  \"🚆\",\n  \"🚇\",\n  \"🚈\",\n  \"🚉\",\n  \"🚊\",\n  \"🚋\",\n  \"🚌\",\n  \"🚍\",\n  \"🚎\",\n  \"🚏\",\n  \"🚐\",\n  \"🚑\",\n  \"🚒\",\n  \"🚓\",\n  \"🚔\",\n  \"🚕\",\n  \"🚖\",\n  \"🚗\",\n  \"🚘\",\n  \"🚙\",\n  \"🚚\",\n  \"🚛\",\n  \"🚜\",\n  \"🚝\",\n  \"🚞\",\n  \"🚟\",\n  \"🚠\",\n  \"🚡\",\n  \"🚢\",\n  \"🚣🏻‍♀️\",\n  \"🚣🏻‍♂️\",\n  \"🚣🏻\",\n  \"🚣🏼‍♀️\",\n  \"🚣🏼‍♂️\",\n  \"🚣🏼\",\n  \"🚣🏽‍♀️\",\n  \"🚣🏽‍♂️\",\n  \"🚣🏽\",\n  \"🚣🏾‍♀️\",\n  \"🚣🏾‍♂️\",\n  \"🚣🏾\",\n  \"🚣🏿‍♀️\",\n  \"🚣🏿‍♂️\",\n  \"🚣🏿\",\n  \"🚣‍♀️\",\n  \"🚣‍♂️\",\n  \"🚣\",\n  \"🚤\",\n  \"🚥\",\n  \"🚦\",\n  \"🚧\",\n  \"🚨\",\n  \"🚩\",\n  \"🚪\",\n  \"🚫\",\n  \"🚬\",\n  \"🚭\",\n  \"🚮\",\n  \"🚯\",\n  \"🚰\",\n  \"🚱\",\n  \"🚲\",\n  \"🚳\",\n  \"🚴🏻‍♀️\",\n  \"🚴🏻‍♂️\",\n  \"🚴🏻\",\n  \"🚴🏼‍♀️\",\n  \"🚴🏼‍♂️\",\n  \"🚴🏼\",\n  \"🚴🏽‍♀️\",\n  \"🚴🏽‍♂️\",\n  \"🚴🏽\",\n  \"🚴🏾‍♀️\",\n  \"🚴🏾‍♂️\",\n  \"🚴🏾\",\n  \"🚴🏿‍♀️\",\n  \"🚴🏿‍♂️\",\n  \"🚴🏿\",\n  \"🚴‍♀️\",\n  \"🚴‍♂️\",\n  \"🚴\",\n  \"🚵🏻‍♀️\",\n  \"🚵🏻‍♂️\",\n  \"🚵🏻\",\n  \"🚵🏼‍♀️\",\n  \"🚵🏼‍♂️\",\n  \"🚵🏼\",\n  \"🚵🏽‍♀️\",\n  \"🚵🏽‍♂️\",\n  \"🚵🏽\",\n  \"🚵🏾‍♀️\",\n  \"🚵🏾‍♂️\",\n  \"🚵🏾\",\n  \"🚵🏿‍♀️\",\n  \"🚵🏿‍♂️\",\n  \"🚵🏿\",\n  \"🚵‍♀️\",\n  \"🚵‍♂️\",\n  \"🚵\",\n  \"🚶🏻‍♀️\",\n  \"🚶🏻‍♂️\",\n  \"🚶🏻\",\n  \"🚶🏼‍♀️\",\n  \"🚶🏼‍♂️\",\n  \"🚶🏼\",\n  \"🚶🏽‍♀️\",\n  \"🚶🏽‍♂️\",\n  \"🚶🏽\",\n  \"🚶🏾‍♀️\",\n  \"🚶🏾‍♂️\",\n  \"🚶🏾\",\n  \"🚶🏿‍♀️\",\n  \"🚶🏿‍♂️\",\n  \"🚶🏿\",\n  \"🚶‍♀️\",\n  \"🚶‍♂️\",\n  \"🚶\",\n  \"🚷\",\n  \"🚸\",\n  \"🚹\",\n  \"🚺\",\n  \"🚻\",\n  \"🚼\",\n  \"🚽\",\n  \"🚾\",\n  \"🚿\",\n  \"🛀🏻\",\n  \"🛀🏼\",\n  \"🛀🏽\",\n  \"🛀🏾\",\n  \"🛀🏿\",\n  \"🛀\",\n  \"🛁\",\n  \"🛂\",\n  \"🛃\",\n  \"🛄\",\n  \"🛅\",\n  \"🛋\",\n  \"🛌🏻\",\n  \"🛌🏼\",\n  \"🛌🏽\",\n  \"🛌🏾\",\n  \"🛌🏿\",\n  \"🛌\",\n  \"🛍\",\n  \"🛎\",\n  \"🛏\",\n  \"🛐\",\n  \"🛑\",\n  \"🛒\",\n  \"🛠\",\n  \"🛡\",\n  \"🛢\",\n  \"🛣\",\n  \"🛤\",\n  \"🛥\",\n  \"🛩\",\n  \"🛫\",\n  \"🛬\",\n  \"🛰\",\n  \"🛳\",\n  \"🛴\",\n  \"🛵\",\n  \"🛶\",\n  \"🤐\",\n  \"🤑\",\n  \"🤒\",\n  \"🤓\",\n  \"🤔\",\n  \"🤕\",\n  \"🤖\",\n  \"🤗\",\n  \"🤘🏻\",\n  \"🤘🏼\",\n  \"🤘🏽\",\n  \"🤘🏾\",\n  \"🤘🏿\",\n  \"🤘\",\n  \"🤙🏻\",\n  \"🤙🏼\",\n  \"🤙🏽\",\n  \"🤙🏾\",\n  \"🤙🏿\",\n  \"🤙\",\n  \"🤚🏻\",\n  \"🤚🏼\",\n  \"🤚🏽\",\n  \"🤚🏾\",\n  \"🤚🏿\",\n  \"🤚\",\n  \"🤛🏻\",\n  \"🤛🏼\",\n  \"🤛🏽\",\n  \"🤛🏾\",\n  \"🤛🏿\",\n  \"🤛\",\n  \"🤜🏻\",\n  \"🤜🏼\",\n  \"🤜🏽\",\n  \"🤜🏾\",\n  \"🤜🏿\",\n  \"🤜\",\n  \"🤝🏻\",\n  \"🤝🏼\",\n  \"🤝🏽\",\n  \"🤝🏾\",\n  \"🤝🏿\",\n  \"🤝\",\n  \"🤞🏻\",\n  \"🤞🏼\",\n  \"🤞🏽\",\n  \"🤞🏾\",\n  \"🤞🏿\",\n  \"🤞\",\n  \"🤠\",\n  \"🤡\",\n  \"🤢\",\n  \"🤣\",\n  \"🤤\",\n  \"🤥\",\n  \"🤦🏻‍♀️\",\n  \"🤦🏻‍♂️\",\n  \"🤦🏻\",\n  \"🤦🏼‍♀️\",\n  \"🤦🏼‍♂️\",\n  \"🤦🏼\",\n  \"🤦🏽‍♀️\",\n  \"🤦🏽‍♂️\",\n  \"🤦🏽\",\n  \"🤦🏾‍♀️\",\n  \"🤦🏾‍♂️\",\n  \"🤦🏾\",\n  \"🤦🏿‍♀️\",\n  \"🤦🏿‍♂️\",\n  \"🤦🏿\",\n  \"🤦‍♀️\",\n  \"🤦‍♂️\",\n  \"🤦\",\n  \"🤧\",\n  \"🤰🏻\",\n  \"🤰🏼\",\n  \"🤰🏽\",\n  \"🤰🏾\",\n  \"🤰🏿\",\n  \"🤰\",\n  \"🤳🏻\",\n  \"🤳🏼\",\n  \"🤳🏽\",\n  \"🤳🏾\",\n  \"🤳🏿\",\n  \"🤳\",\n  \"🤴🏻\",\n  \"🤴🏼\",\n  \"🤴🏽\",\n  \"🤴🏾\",\n  \"🤴🏿\",\n  \"🤴\",\n  \"🤵🏻\",\n  \"🤵🏼\",\n  \"🤵🏽\",\n  \"🤵🏾\",\n  \"🤵🏿\",\n  \"🤵\",\n  \"🤶🏻\",\n  \"🤶🏼\",\n  \"🤶🏽\",\n  \"🤶🏾\",\n  \"🤶🏿\",\n  \"🤶\",\n  \"🤷🏻‍♀️\",\n  \"🤷🏻‍♂️\",\n  \"🤷🏻\",\n  \"🤷🏼‍♀️\",\n  \"🤷🏼‍♂️\",\n  \"🤷🏼\",\n  \"🤷🏽‍♀️\",\n  \"🤷🏽‍♂️\",\n  \"🤷🏽\",\n  \"🤷🏾‍♀️\",\n  \"🤷🏾‍♂️\",\n  \"🤷🏾\",\n  \"🤷🏿‍♀️\",\n  \"🤷🏿‍♂️\",\n  \"🤷🏿\",\n  \"🤷‍♀️\",\n  \"🤷‍♂️\",\n  \"🤷\",\n  \"🤸🏻‍♀️\",\n  \"🤸🏻‍♂️\",\n  \"🤸🏻\",\n  \"🤸🏼‍♀️\",\n  \"🤸🏼‍♂️\",\n  \"🤸🏼\",\n  \"🤸🏽‍♀️\",\n  \"🤸🏽‍♂️\",\n  \"🤸🏽\",\n  \"🤸🏾‍♀️\",\n  \"🤸🏾‍♂️\",\n  \"🤸🏾\",\n  \"🤸🏿‍♀️\",\n  \"🤸🏿‍♂️\",\n  \"🤸🏿\",\n  \"🤸‍♀️\",\n  \"🤸‍♂️\",\n  \"🤸\",\n  \"🤹🏻‍♀️\",\n  \"🤹🏻‍♂️\",\n  \"🤹🏻\",\n  \"🤹🏼‍♀️\",\n  \"🤹🏼‍♂️\",\n  \"🤹🏼\",\n  \"🤹🏽‍♀️\",\n  \"🤹🏽‍♂️\",\n  \"🤹🏽\",\n  \"🤹🏾‍♀️\",\n  \"🤹🏾‍♂️\",\n  \"🤹🏾\",\n  \"🤹🏿‍♀️\",\n  \"🤹🏿‍♂️\",\n  \"🤹🏿\",\n  \"🤹‍♀️\",\n  \"🤹‍♂️\",\n  \"🤹\",\n  \"🤺\",\n  \"🤼🏻‍♀️\",\n  \"🤼🏻‍♂️\",\n  \"🤼🏻\",\n  \"🤼🏼‍♀️\",\n  \"🤼🏼‍♂️\",\n  \"🤼🏼\",\n  \"🤼🏽‍♀️\",\n  \"🤼🏽‍♂️\",\n  \"🤼🏽\",\n  \"🤼🏾‍♀️\",\n  \"🤼🏾‍♂️\",\n  \"🤼🏾\",\n  \"🤼🏿‍♀️\",\n  \"🤼🏿‍♂️\",\n  \"🤼🏿\",\n  \"🤼‍♀️\",\n  \"🤼‍♂️\",\n  \"🤼\",\n  \"🤽🏻‍♀️\",\n  \"🤽🏻‍♂️\",\n  \"🤽🏻\",\n  \"🤽🏼‍♀️\",\n  \"🤽🏼‍♂️\",\n  \"🤽🏼\",\n  \"🤽🏽‍♀️\",\n  \"🤽🏽‍♂️\",\n  \"🤽🏽\",\n  \"🤽🏾‍♀️\",\n  \"🤽🏾‍♂️\",\n  \"🤽🏾\",\n  \"🤽🏿‍♀️\",\n  \"🤽🏿‍♂️\",\n  \"🤽🏿\",\n  \"🤽‍♀️\",\n  \"🤽‍♂️\",\n  \"🤽\",\n  \"🤾🏻‍♀️\",\n  \"🤾🏻‍♂️\",\n  \"🤾🏻\",\n  \"🤾🏼‍♀️\",\n  \"🤾🏼‍♂️\",\n  \"🤾🏼\",\n  \"🤾🏽‍♀️\",\n  \"🤾🏽‍♂️\",\n  \"🤾🏽\",\n  \"🤾🏾‍♀️\",\n  \"🤾🏾‍♂️\",\n  \"🤾🏾\",\n  \"🤾🏿‍♀️\",\n  \"🤾🏿‍♂️\",\n  \"🤾🏿\",\n  \"🤾‍♀️\",\n  \"🤾‍♂️\",\n  \"🤾\",\n  \"🥀\",\n  \"🥁\",\n  \"🥂\",\n  \"🥃\",\n  \"🥄\",\n  \"🥅\",\n  \"🥇\",\n  \"🥈\",\n  \"🥉\",\n  \"🥊\",\n  \"🥋\",\n  \"🥐\",\n  \"🥑\",\n  \"🥒\",\n  \"🥓\",\n  \"🥔\",\n  \"🥕\",\n  \"🥖\",\n  \"🥗\",\n  \"🥘\",\n  \"🥙\",\n  \"🥚\",\n  \"🥛\",\n  \"🥜\",\n  \"🥝\",\n  \"🥞\",\n  \"🦀\",\n  \"🦁\",\n  \"🦂\",\n  \"🦃\",\n  \"🦄\",\n  \"🦅\",\n  \"🦆\",\n  \"🦇\",\n  \"🦈\",\n  \"🦉\",\n  \"🦊\",\n  \"🦋\",\n  \"🦌\",\n  \"🦍\",\n  \"🦎\",\n  \"🦏\",\n  \"🦐\",\n  \"🦑\",\n  \"🧀\",\n  \"‼\",\n  \"⁉\",\n  \"™\",\n  \"ℹ\",\n  \"↔\",\n  \"↕\",\n  \"↖\",\n  \"↗\",\n  \"↘\",\n  \"↙\",\n  \"↩\",\n  \"↪\",\n  \"#⃣\",\n  \"⌚\",\n  \"⌛\",\n  \"⌨\",\n  \"⏏\",\n  \"⏩\",\n  \"⏪\",\n  \"⏫\",\n  \"⏬\",\n  \"⏭\",\n  \"⏮\",\n  \"⏯\",\n  \"⏰\",\n  \"⏱\",\n  \"⏲\",\n  \"⏳\",\n  \"⏸\",\n  \"⏹\",\n  \"⏺\",\n  \"Ⓜ\",\n  \"▪\",\n  \"▫\",\n  \"▶\",\n  \"◀\",\n  \"◻\",\n  \"◼\",\n  \"◽\",\n  \"◾\",\n  \"☀\",\n  \"☁\",\n  \"☂\",\n  \"☃\",\n  \"☄\",\n  \"☎\",\n  \"☑\",\n  \"☔\",\n  \"☕\",\n  \"☘\",\n  \"☝🏻\",\n  \"☝🏼\",\n  \"☝🏽\",\n  \"☝🏾\",\n  \"☝🏿\",\n  \"☝\",\n  \"☠\",\n  \"☢\",\n  \"☣\",\n  \"☦\",\n  \"☪\",\n  \"☮\",\n  \"☯\",\n  \"☸\",\n  \"☹\",\n  \"☺\",\n  \"♀\",\n  \"♂\",\n  \"♈\",\n  \"♉\",\n  \"♊\",\n  \"♋\",\n  \"♌\",\n  \"♍\",\n  \"♎\",\n  \"♏\",\n  \"♐\",\n  \"♑\",\n  \"♒\",\n  \"♓\",\n  \"♠\",\n  \"♣\",\n  \"♥\",\n  \"♦\",\n  \"♨\",\n  \"♻\",\n  \"♿\",\n  \"⚒\",\n  \"⚓\",\n  \"⚔\",\n  \"⚕\",\n  \"⚖\",\n  \"⚗\",\n  \"⚙\",\n  \"⚛\",\n  \"⚜\",\n  \"⚠\",\n  \"⚡\",\n  \"⚪\",\n  \"⚫\",\n  \"⚰\",\n  \"⚱\",\n  \"⚽\",\n  \"⚾\",\n  \"⛄\",\n  \"⛅\",\n  \"⛈\",\n  \"⛎\",\n  \"⛏\",\n  \"⛑\",\n  \"⛓\",\n  \"⛔\",\n  \"⛩\",\n  \"⛪\",\n  \"⛰\",\n  \"⛱\",\n  \"⛲\",\n  \"⛳\",\n  \"⛴\",\n  \"⛵\",\n  \"⛷🏻\",\n  \"⛷🏼\",\n  \"⛷🏽\",\n  \"⛷🏾\",\n  \"⛷🏿\",\n  \"⛷\",\n  \"⛸\",\n  \"⛹🏻‍♀️\",\n  \"⛹🏻‍♂️\",\n  \"⛹🏻\",\n  \"⛹🏼‍♀️\",\n  \"⛹🏼‍♂️\",\n  \"⛹🏼\",\n  \"⛹🏽‍♀️\",\n  \"⛹🏽‍♂️\",\n  \"⛹🏽\",\n  \"⛹🏾‍♀️\",\n  \"⛹🏾‍♂️\",\n  \"⛹🏾\",\n  \"⛹🏿‍♀️\",\n  \"⛹🏿‍♂️\",\n  \"⛹🏿\",\n  \"⛹️‍♀️\",\n  \"⛹️‍♂️\",\n  \"⛹\",\n  \"⛺\",\n  \"⛽\",\n  \"✂\",\n  \"✅\",\n  \"✈\",\n  \"✉\",\n  \"✊🏻\",\n  \"✊🏼\",\n  \"✊🏽\",\n  \"✊🏾\",\n  \"✊🏿\",\n  \"✊\",\n  \"✋🏻\",\n  \"✋🏼\",\n  \"✋🏽\",\n  \"✋🏾\",\n  \"✋🏿\",\n  \"✋\",\n  \"✌🏻\",\n  \"✌🏼\",\n  \"✌🏽\",\n  \"✌🏾\",\n  \"✌🏿\",\n  \"✌\",\n  \"✍🏻\",\n  \"✍🏼\",\n  \"✍🏽\",\n  \"✍🏾\",\n  \"✍🏿\",\n  \"✍\",\n  \"✏\",\n  \"✒\",\n  \"✔\",\n  \"✖\",\n  \"✝\",\n  \"✡\",\n  \"✨\",\n  \"✳\",\n  \"✴\",\n  \"❄\",\n  \"❇\",\n  \"❌\",\n  \"❎\",\n  \"❓\",\n  \"❔\",\n  \"❕\",\n  \"❗\",\n  \"❣\",\n  \"❤\",\n  \"➕\",\n  \"➖\",\n  \"➗\",\n  \"➡\",\n  \"➰\",\n  \"➿\",\n  \"⤴\",\n  \"⤵\",\n  \"*⃣\",\n  \"⬅\",\n  \"⬆\",\n  \"⬇\",\n  \"⬛\",\n  \"⬜\",\n  \"⭐\",\n  \"⭕\",\n  \"0⃣\",\n  \"〰\",\n  \"〽\",\n  \"1⃣\",\n  \"2⃣\",\n  \"㊗\",\n  \"㊙\",\n  \"3⃣\",\n  \"4⃣\",\n  \"5⃣\",\n  \"6⃣\",\n  \"7⃣\",\n  \"8⃣\",\n  \"9⃣\",\n  \"©\",\n  \"®\",\n  \"\"\n]","\"use strict\";\n\nconst path = require(\"path\");\nconst emojisList = require(\"emojis-list\");\nconst getHashDigest = require(\"./getHashDigest\");\n\nconst emojiRegex = /[\\uD800-\\uDFFF]./;\nconst emojiList = emojisList.filter(emoji => emojiRegex.test(emoji));\nconst emojiCache = {};\n\nfunction encodeStringToEmoji(content, length) {\n\tif(emojiCache[content]) return emojiCache[content];\n\tlength = length || 1;\n\tconst emojis = [];\n\tdo {\n\t\tconst index = Math.floor(Math.random() * emojiList.length);\n\t\temojis.push(emojiList[index]);\n\t\temojiList.splice(index, 1);\n\t} while(--length > 0);\n\tconst emojiEncoding = emojis.join(\"\");\n\temojiCache[content] = emojiEncoding;\n\treturn emojiEncoding;\n}\n\nfunction interpolateName(loaderContext, name, options) {\n\tlet filename;\n\tif(typeof name === \"function\") {\n\t\tfilename = name(loaderContext.resourcePath);\n\t} else {\n\t\tfilename = name || \"[hash].[ext]\";\n\t}\n\tconst context = options.context;\n\tconst content = options.content;\n\tconst regExp = options.regExp;\n\tlet ext = \"bin\";\n\tlet basename = \"file\";\n\tlet directory = \"\";\n\tlet folder = \"\";\n\tif(loaderContext.resourcePath) {\n\t\tconst parsed = path.parse(loaderContext.resourcePath);\n\t\tlet resourcePath = loaderContext.resourcePath;\n\n\t\tif(parsed.ext) {\n\t\t\text = parsed.ext.substr(1);\n\t\t}\n\t\tif(parsed.dir) {\n\t\t\tbasename = parsed.name;\n\t\t\tresourcePath = parsed.dir + path.sep;\n\t\t}\n\t\tif(typeof context !== \"undefined\") {\n\t\t\tdirectory = path.relative(context, resourcePath + \"_\").replace(/\\\\/g, \"/\").replace(/\\.\\.(\\/)?/g, \"_$1\");\n\t\t\tdirectory = directory.substr(0, directory.length - 1);\n\t\t} else {\n\t\t\tdirectory = resourcePath.replace(/\\\\/g, \"/\").replace(/\\.\\.(\\/)?/g, \"_$1\");\n\t\t}\n\t\tif(directory.length === 1) {\n\t\t\tdirectory = \"\";\n\t\t} else if(directory.length > 1) {\n\t\t\tfolder = path.basename(directory);\n\t\t}\n\t}\n\tlet url = filename;\n\tif(content) {\n\t\t// Match hash template\n\t\turl = url\n\t\t\t.replace(\n\t\t\t\t/\\[(?:(\\w+):)?hash(?::([a-z]+\\d*))?(?::(\\d+))?\\]/ig,\n\t\t\t\t(all, hashType, digestType, maxLength) => getHashDigest(content, hashType, digestType, parseInt(maxLength, 10))\n\t\t\t)\n\t\t\t.replace(\n\t\t\t\t/\\[emoji(?::(\\d+))?\\]/ig,\n\t\t\t\t(all, length) => encodeStringToEmoji(content, length)\n\t\t\t);\n\t}\n\turl = url\n\t\t.replace(/\\[ext\\]/ig, () => ext)\n\t\t.replace(/\\[name\\]/ig, () => basename)\n\t\t.replace(/\\[path\\]/ig, () => directory)\n\t\t.replace(/\\[folder\\]/ig, () => folder);\n\tif(regExp && loaderContext.resourcePath) {\n\t\tconst match = loaderContext.resourcePath.match(new RegExp(regExp));\n\t\tmatch && match.forEach((matched, i) => {\n\t\t\turl = url.replace(\n\t\t\t\tnew RegExp(\"\\\\[\" + i + \"\\\\]\", \"ig\"),\n\t\t\t\tmatched\n\t\t\t);\n\t\t});\n\t}\n\tif(typeof loaderContext.options === \"object\" && typeof loaderContext.options.customInterpolateName === \"function\") {\n\t\turl = loaderContext.options.customInterpolateName.call(loaderContext, url, name, options);\n\t}\n\treturn url;\n}\n\nmodule.exports = interpolateName;\n","\"use strict\";\n\nconst getOptions = require(\"./getOptions\");\nconst parseQuery = require(\"./parseQuery\");\nconst stringifyRequest = require(\"./stringifyRequest\");\nconst getRemainingRequest = require(\"./getRemainingRequest\");\nconst getCurrentRequest = require(\"./getCurrentRequest\");\nconst isUrlRequest = require(\"./isUrlRequest\");\nconst urlToRequest = require(\"./urlToRequest\");\nconst parseString = require(\"./parseString\");\nconst getHashDigest = require(\"./getHashDigest\");\nconst interpolateName = require(\"./interpolateName\");\n\nexports.getOptions = getOptions;\nexports.parseQuery = parseQuery;\nexports.stringifyRequest = stringifyRequest;\nexports.getRemainingRequest = getRemainingRequest;\nexports.getCurrentRequest = getCurrentRequest;\nexports.isUrlRequest = isUrlRequest;\nexports.urlToRequest = urlToRequest;\nexports.parseString = parseString;\nexports.getHashDigest = getHashDigest;\nexports.interpolateName = interpolateName;\n","import fs from 'fs';\nimport loaderUtils from 'loader-utils';\nimport nunjucks from 'nunjucks';\nimport path from 'path';\n\nfunction nunjucksWebpackLoader (source) {\n  const options = loaderUtils.getOptions(this) || {};\n\n  const njkLoader = (startPath, alias) => {\n    const resolvePath = filePath => {\n      if (typeof alias === 'object') {\n        console.log(alias)\n        for (let key in alias) {\n          const patt = new RegExp(`^~${key}`);\n  \n          if (patt.test(filePath)) {\n            return path.join(alias[key], filePath.replace(patt, ''));\n          }\n        }\n      }\n  \n      return path.resolve(startPath, filePath);\n    };\n  \n    return {\n      getSource: filePath => {\n        const completePath = resolvePath(filePath);\n        this.addDependency(completePath);\n        const dataBuffer = fs.readFileSync(completePath);\n        // const charset = chardet.detect(dataBuffer);\n  \n        return {\n          src: dataBuffer\n            .toString('UTF-8', 0, dataBuffer.length)\n            .replace(/({%.+?)>(.+?%})/gi, '$1&gt;$2')\n            .replace(/({%.+?)<(.+?%})/gi, '$1&lt;$2'), //将 > < 替换成实体字符,\n          path: completePath\n        };\n      }\n    };\n  };\n\n  if (options.tags) {\n    source = source\n      .replace(/({%.+?)>(.+?%})/gi, '$1&gt;$2')\n      .replace(/({%.+?)<(.+?%})/gi, '$1&lt;$2'); //将 > < 替换成实体字符\n  }\n  const env = new nunjucks.Environment(njkLoader(this.context, options.alias), {\n    tags: options.tags\n  });\n  const compiled = nunjucks.compile(source, env);\n  const rendered = compiled.render(options.context || {});\n\n  return rendered;\n}\n\nexport default nunjucksWebpackLoader;\n"],"names":["JSON5","parseQuery","this","require$$0","require$$1","getHashDigest","getOptions","stringifyRequest","getRemainingRequest","getCurrentRequest","isUrlRequest","urlToRequest","parseString","interpolateName","nunjucksWebpackLoader","source","options","loaderUtils","njkLoader","startPath","alias","resolvePath","filePath","console","log","key","patt","RegExp","test","path","join","replace","resolve","getSource","completePath","addDependency","dataBuffer","fs","readFileSync","src","toString","length","tags","env","nunjucks","Environment","context","compiled","compile","rendered","render"],"mappings":"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"}